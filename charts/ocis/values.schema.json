{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "autoscaling": {
      "additionalProperties": true,
      "description": "Autoscaling settings.",
      "properties": {
        "enabled": {
          "required": [],
          "type": "boolean"
        },
        "maxReplicas": {
          "minimum": 1,
          "required": [],
          "type": "integer"
        },
        "metrics": {
          "additionalProperties": true,
          "required": []
        },
        "minReplicas": {
          "minimum": 1,
          "required": [],
          "type": "integer"
        }
      },
      "required": [],
      "title": "autoscaling",
      "type": "object"
    },
    "backup": {
      "additionalProperties": false,
      "description": "Backup related settings\nCompare to https://doc.owncloud.com/ocis/next/maintenance/b-r/backup_considerations.html",
      "properties": {
        "configMapLabels": {
          "additionalProperties": false,
          "description": "Labels that are added to ConfigMaps that are manged by this Chart and must be included in a backup when backing up Kubernetes resources.",
          "patternProperties": {
            ".*": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "configMapLabels",
          "type": "object"
        },
        "pvcLabels": {
          "additionalProperties": false,
          "description": "Labels that are added to PVCs that are manged by this Chart and must be included in a backup when backing up Kubernetes resources.",
          "patternProperties": {
            ".*": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "pvcLabels",
          "type": "object"
        },
        "secretLabels": {
          "additionalProperties": false,
          "description": "Labels that are added to Secrets that are manged by this Chart and must be included in a backup when backing up Kubernetes resources.",
          "patternProperties": {
            ".*": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "secretLabels",
          "type": "object"
        }
      },
      "required": [],
      "title": "backup",
      "type": "object"
    },
    "cache": {
      "additionalProperties": false,
      "properties": {
        "nodes": {
          "description": "Nodes of the cache to use.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "nodes",
          "type": "array"
        },
        "type": {
          "default": "nats-js-kv",
          "description": "Type of the cache to use.\nCan be set to \"nats-js-kv\" or \"redis-sentinel\". There are also the non-recommended options \"memory\" and \"noop\".\nThe address of NATS / Redis Sentinel node(s) needs to be set to `cache.nodes`.",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "cache",
      "type": "object"
    },
    "configRefs": {
      "additionalProperties": false,
      "description": "References to ConfigMaps.\nThe ConfigMaps need to be manually created.\nLeave these empty to have them autogenerated by the Helm chart.\nNote that ConfigMaps generated by the helm chart will be removed once the helm chart is uninstalled.\nFurthermore, if you already had ConfigMaps at the default locations, they will be NOT be overwritten,\nbut the helm chart will claim ownership of them. If this is a problem, fill in the configRefs below\nwith the names of your existing secrets.\nSee https://doc.owncloud.com/ocis/next/deployment/container/orchestration/orchestration.html#customize-the-generic-setup[doc.owncloud.com] for how to generate them.",
      "properties": {
        "authServiceConfigRef": {
          "default": "",
          "description": "Reference to an existing authservice config.",
          "required": [],
          "title": "authServiceConfigRef",
          "type": [
            "string",
            "null"
          ]
        },
        "graphConfigRef": {
          "default": "",
          "description": "Reference to an existing graph config.",
          "required": [],
          "title": "graphConfigRef",
          "type": [
            "string",
            "null"
          ]
        },
        "storageusersConfigRef": {
          "default": "",
          "description": "Reference to an existing storage-users config.",
          "required": [],
          "title": "storageusersConfigRef",
          "type": [
            "string",
            "null"
          ]
        },
        "webThemeAssetsConfigRef": {
          "default": "",
          "description": "Optional reference to an existing web theme assets config.\nWill be mounted to /var/lib/ocis/web/assets/themes/owncloud/assets for Web.\nDoes not get autogenerated.\nHint: if you set this, you'll no longer be able to change the instance logo via the Web UI.",
          "required": [],
          "title": "webThemeAssetsConfigRef",
          "type": [
            "string",
            "null"
          ]
        },
        "webThemeConfigRef": {
          "default": "",
          "description": "Optional reference to an existing web theme config.\nWill be mounted to /var/lib/ocis/web/assets/themes/owncloud for Web.\nDoes not get autogenerated.\nHint: if you set this, you'll no longer be able to change the instance logo via the Web UI.",
          "required": [],
          "title": "webThemeConfigRef",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "title": "configRefs",
      "type": "object"
    },
    "customCAChain": {
      "additionalProperties": false,
      "description": "Custom CA chain\nIf a custom CA chain is needed for the communcation in between services or with external services like S3 or notification services.\nThe secret needs to be manually created.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Custom CA enables SSL_CERT_DIR in pods with the additional path /etc/ssl/custom.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "existingConfigMap": {
          "default": "",
          "description": "If custom CA chain is enabled this attribute mounts the existing ConfigMap to /etc/ssl/custom.",
          "required": [],
          "title": "existingConfigMap",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "title": "customCAChain",
      "type": "object"
    },
    "debug": {
      "additionalProperties": false,
      "description": "Debug settings for the oCIS service",
      "properties": {
        "profiling": {
          "default": false,
          "description": "Profiling enables the http://\u003cpod\u003e:\u003cdebug-metrics\u003e/debug/pprof endpoint to inspect various Go runtime internals.\nYou can use the endpoint on your machine by forwarding the port, eg: `kubectl port-forward -n ocis pod/proxy-8587dc9d64-fs24l 9205:9205`\nand then accessing the port on https://localhost:9147/debug/pprof or using the pprof command line tool: `go tool pprof -web http://localhost:9205/debug/pprof/symbol\\?seconds\\=10`",
          "required": [],
          "title": "profiling",
          "type": "boolean"
        }
      },
      "required": [
        "profiling"
      ],
      "title": "debug",
      "type": "object"
    },
    "deploymentStrategy": {
      "additionalProperties": false,
      "description": "Deployment strategy.",
      "properties": {
        "rollingUpdate": {
          "additionalProperties": false,
          "properties": {
            "maxSurge": {
              "default": "25%",
              "description": "The maximum number of pods that can be scheduled above the desired number of pods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).",
              "oneOf": [
                {
                  "required": [],
                  "type": "string"
                },
                {
                  "required": [],
                  "type": "integer"
                }
              ],
              "required": [],
              "title": "maxSurge"
            },
            "maxUnavailable": {
              "default": "25%",
              "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).",
              "oneOf": [
                {
                  "required": [],
                  "type": "string"
                },
                {
                  "required": [],
                  "type": "integer"
                }
              ],
              "required": [],
              "title": "maxUnavailable"
            }
          },
          "required": [
            "maxSurge",
            "maxUnavailable"
          ],
          "title": "rollingUpdate",
          "type": "object"
        },
        "type": {
          "default": "RollingUpdate",
          "description": "deployment strategy type to use. Can be \"RollingUpdate\" or \"Recreate\"",
          "enum": [
            "RollingUpdate",
            "Recreate"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "type",
        "rollingUpdate"
      ],
      "title": "deploymentStrategy",
      "type": "object"
    },
    "externalDomain": {
      "default": "",
      "description": "Domain where oCIS is reachable for the outside world",
      "required": [],
      "title": "externalDomain",
      "type": "string"
    },
    "extraAnnotations": {
      "additionalProperties": false,
      "description": "Custom annotations for all deployments",
      "patternProperties": {
        ".*": {
          "required": [],
          "type": "string"
        }
      },
      "required": [],
      "title": "extraAnnotations",
      "type": "object"
    },
    "extraLabels": {
      "additionalProperties": false,
      "description": "Custom labels for all manifests",
      "patternProperties": {
        ".*": {
          "required": [],
          "type": "string"
        }
      },
      "required": [],
      "title": "extraLabels",
      "type": "object"
    },
    "extraResources": {
      "description": "Include arbitrary resources, eg. config maps or a cert-manager issuer (see example below)\nExtra resources to be included.",
      "items": {
        "required": [],
        "type": "string"
      },
      "required": [],
      "title": "extraResources",
      "type": "array"
    },
    "features": {
      "additionalProperties": false,
      "description": "Feature options.\nEnable or disable features of oCIS.",
      "properties": {
        "appsIntegration": {
          "additionalProperties": false,
          "description": "Apps integration",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables the apps integration.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "mimetypes": {
              "description": "Mimetype configuration.\nLet's you configure a mimetypes' default application, if it is allowed to create a new file and more.",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "allow_creation": {
                    "required": [],
                    "type": "boolean"
                  },
                  "default_app": {
                    "required": [],
                    "type": "string"
                  },
                  "description": {
                    "required": [],
                    "type": "string"
                  },
                  "extension": {
                    "required": [],
                    "type": "string"
                  },
                  "icon": {
                    "required": [],
                    "type": "string"
                  },
                  "mime_type": {
                    "required": [],
                    "type": "string"
                  },
                  "name": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "mimetypes",
              "type": "array"
            },
            "wopiIntegration": {
              "additionalProperties": false,
              "description": "WOPI (office suite integration) needs an https://github.com/cs3org/wopiserver[cs3org/wopiserver] and at least one office suite.",
              "properties": {
                "officeSuites": {
                  "description": "List of WOPI compliant office suites to be used.\nExample configurations can be found in https://github.com/owncloud/ocis-charts/blob/main/deployments/ocis-office/helmfile.yaml\nThis are the available config options:\n- # Name of the office suite. Will be displayed to the users.\n  name:\n  # Product type of the office suite. Will be used to determine certain product specifics.\n  # Supports \"Collabora\", \"OnlyOffice\", \"Microsoft365\" or \"MicrosoftOfficeOnline\".\n  product:\n  # Enables the office suite.\n  enabled: false\n  # URI of the office suite.\n  uri:\n  # URI for the icon of the office suite. Will be displayed to the users.\n  iconURI:\n  # Description of the office suite\n  description: \"Open office documents with Office X\"\n  # Disables SSL certificate checking for connections to the office suites http api.\n  # Not recommended for production installations.\n  insecure: false\n  # Disables verifying requests via WOPI proof keys.\n  # Not recommended to be disabled for production installations.\n  disableProof: false\n  # Enable secure view for this office suite\n  secureViewEnabled: false\n  # Disables the chat in the office suite. Note: This currently only applies to OnlyOffice\n  disableChat: false\n  # Ingress for collaboration service.\n  ingress:\n    # Enables the Ingress. Only needed if the office application is not running within the same cluster.\n    enabled: false\n    # Domain of the Ingress.\n    domain:\n    # Ingress class to use.\n    # Uses the default ingress class if not set.\n    ingressClassName:\n    # Ingress annotations.\n    annotations: {}\n    # Labels for the ingress.\n    labels: {}\n    # Ingress TLS configuration.\n    tls: []\n    #  - secretName: chart-example-tls\n    #    hosts:\n    #      - wopi.owncloud.test",
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "required": [],
                        "type": "string"
                      },
                      "disableChat": {
                        "required": [],
                        "type": "boolean"
                      },
                      "disableProof": {
                        "required": [],
                        "type": "boolean"
                      },
                      "enabled": {
                        "required": [],
                        "type": "boolean"
                      },
                      "iconURI": {
                        "format": "uri",
                        "required": [],
                        "type": "string"
                      },
                      "ingress": {
                        "additionalProperties": false,
                        "properties": {
                          "annotations": {
                            "patternProperties": {
                              ".*": {
                                "required": [],
                                "type": "string"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "domain": {
                            "required": [],
                            "type": "string"
                          },
                          "enabled": {
                            "required": [],
                            "type": "boolean"
                          },
                          "ingressClassName": {
                            "required": [],
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "labels": {
                            "patternProperties": {
                              ".*": {
                                "required": [],
                                "type": "string"
                              }
                            },
                            "required": [],
                            "type": "object"
                          },
                          "tls": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "hosts": {
                                  "items": {
                                    "format": "hostname",
                                    "required": [],
                                    "type": "string"
                                  },
                                  "required": [],
                                  "type": "array"
                                },
                                "secretName": {
                                  "required": [],
                                  "type": "string"
                                }
                              },
                              "required": [],
                              "type": "object"
                            },
                            "required": [],
                            "type": "array"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "insecure": {
                        "required": [],
                        "type": "boolean"
                      },
                      "name": {
                        "required": [],
                        "type": "string"
                      },
                      "product": {
                        "enum": [
                          "Collabora",
                          "OnlyOffice",
                          "Microsoft365",
                          "MicrosoftOfficeOnline"
                        ],
                        "required": []
                      },
                      "secureViewEnabled": {
                        "required": [],
                        "type": "boolean"
                      },
                      "uri": {
                        "format": "uri",
                        "required": [],
                        "type": "string"
                      }
                    },
                    "required": [],
                    "type": "object"
                  },
                  "required": [],
                  "title": "officeSuites",
                  "type": "array"
                }
              },
              "required": [
                "officeSuites"
              ],
              "title": "wopiIntegration",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "wopiIntegration",
            "mimetypes"
          ],
          "title": "appsIntegration",
          "type": "object"
        },
        "archiver": {
          "additionalProperties": false,
          "description": "Archiver settings",
          "properties": {
            "maxNumFiles": {
              "default": 10000,
              "description": "Max number of files that can be packed into an archive.",
              "minimum": 1,
              "required": [],
              "title": "maxNumFiles",
              "type": "integer"
            },
            "maxSize": {
              "default": 1073741824,
              "description": "Max size in bytes of the zip archive the archiver can create.",
              "minimum": 1,
              "required": [],
              "title": "maxSize",
              "type": "integer"
            }
          },
          "required": [
            "maxSize",
            "maxNumFiles"
          ],
          "title": "archiver",
          "type": "object"
        },
        "authapp": {
          "additionalProperties": false,
          "description": "Auth app settings",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables Auth app service",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "title": "authapp",
          "type": "object"
        },
        "demoUsers": {
          "default": false,
          "description": "Create demo users on the first startup.\nNot recommended for production installations.",
          "required": [],
          "title": "demoUsers",
          "type": "boolean"
        },
        "edition": {
          "default": "Community",
          "description": "Edition of ownCloud Infinite Scale.",
          "enum": [
            "Community",
            "Enterprise"
          ],
          "required": [],
          "title": "edition"
        },
        "emailNotifications": {
          "additionalProperties": false,
          "description": "Email related settings",
          "properties": {
            "branding": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "default": false,
                  "description": "Enables mail branding. If enabled, you need to provide the text and html template ConfigMap.\nThe image ConfigMap is optional.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "htmlMailImagesConfigRef": {
                  "default": "html-mail-images",
                  "description": "Reference to a ConfigMap containing images that can be referenced from the html mail template.\nThis ConfigMap is optional and can be omitted when images are not used.",
                  "required": [],
                  "title": "htmlMailImagesConfigRef",
                  "type": "string"
                },
                "htmlMailTemplatesConfigRef": {
                  "default": "html-mail-templates",
                  "description": "Reference to a ConfigMap containing the html mail template.\nThe template file must be named \"email.html.tmpl\".\nThe default template can be seen here: https://github.com/owncloud/ocis/blob/master/services/notifications/pkg/email/templates/html/email.html.tmpl",
                  "required": [],
                  "title": "htmlMailTemplatesConfigRef",
                  "type": "string"
                },
                "textMailTemplatesConfigRef": {
                  "default": "text-mail-templates",
                  "description": "Reference to a ConfigMap containing the text mail template.\nThe template file must be named \"email.text.tmpl\".\nThe default template can be seen here: https://github.com/owncloud/ocis/blob/master/services/notifications/pkg/email/templates/text/email.text.tmpl",
                  "required": [],
                  "title": "textMailTemplatesConfigRef",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "textMailTemplatesConfigRef",
                "htmlMailTemplatesConfigRef",
                "htmlMailImagesConfigRef"
              ],
              "title": "branding",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enables email notifications.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "smtp": {
              "additionalProperties": false,
              "properties": {
                "authentication": {
                  "default": "auto",
                  "description": "Authentication method for the SMTP communication. Possible values are ‘login’, ‘plain’, ‘crammd5’, ‘none’, 'auto'\nIf set to another value than `none`, a secret referenced by `notificationsSmtpSecretRef` needs to be present.",
                  "enum": [
                    "auto",
                    "login",
                    "plain",
                    "crammd5",
                    "none"
                  ],
                  "required": [],
                  "title": "authentication"
                },
                "encryption": {
                  "default": "ssltls",
                  "description": "Encryption method for the SMTP communication. Possible values are `starttls`, `ssl`, `ssltls`, `tls` and `none`",
                  "enum": [
                    "starttls",
                    "ssl",
                    "ssltls",
                    "tls",
                    "none"
                  ],
                  "required": [],
                  "title": "encryption"
                },
                "host": {
                  "default": "",
                  "description": "SMTP host to connect to.",
                  "format": "hostname",
                  "required": [],
                  "title": "host",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "port": {
                  "default": "",
                  "description": "Port of the SMTP host to connect to.",
                  "minimum": 1,
                  "required": [],
                  "title": "port",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "sender": {
                  "default": "",
                  "description": "Sender address of emails that will be sent. Example: 'ownCloud \u003cnoreply",
                  "required": [],
                  "title": "sender",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "authentication",
                "encryption"
              ],
              "title": "smtp",
              "type": "object"
            },
            "summary": {
              "additionalProperties": false,
              "properties": {
                "daily": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that sends out a summary for the day.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "schedule": {
                      "default": "0 0 * * *",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds"
                  ],
                  "title": "daily",
                  "type": "object"
                },
                "weekly": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that sends out a summary for the week.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "schedule": {
                      "default": "0 0 * * 0",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds"
                  ],
                  "title": "weekly",
                  "type": "object"
                }
              },
              "required": [
                "daily",
                "weekly"
              ],
              "title": "summary",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "smtp",
            "summary",
            "branding"
          ],
          "title": "emailNotifications",
          "type": "object"
        },
        "externalUserManagement": {
          "additionalProperties": false,
          "description": "External user management",
          "properties": {
            "adminUUID": {
              "default": "",
              "description": "UUID of the initial admin user.\nIf the given value matches a user's value from `features.externalUserManagement.oidc.userIDClaim`, the admin role will be assigned.\nConsider that the UUID can be encoded in some LDAP deployment configurations like in .ldif files. These need to be decoded beforehand.\nNote: Enabling `roleAssignment` will disable `adminUUID`.",
              "required": [],
              "title": "adminUUID",
              "type": [
                "string",
                "null"
              ]
            },
            "autoprovisionAccounts": {
              "additionalProperties": false,
              "description": "Autoprovisioning of user accounts via OIDC",
              "properties": {
                "claimDisplayname": {
                  "default": "name",
                  "description": "The name of the OIDC claim that holds the display name.",
                  "required": [],
                  "title": "claimDisplayname",
                  "type": "string"
                },
                "claimEmail": {
                  "default": "email",
                  "description": "The name of the OIDC claim that holds the email.",
                  "required": [],
                  "title": "claimEmail",
                  "type": "string"
                },
                "claimGroups": {
                  "default": "groups",
                  "description": "The name of the OIDC claim that holds the groups.",
                  "required": [],
                  "title": "claimGroups",
                  "type": "string"
                },
                "claimUserName": {
                  "default": "sub",
                  "description": "The name of the OIDC claim that holds the username.",
                  "required": [],
                  "title": "claimUserName",
                  "type": "string"
                },
                "enabled": {
                  "default": false,
                  "description": "Enables account auto provisioning.\nIt will create missing users on the LDAP server from OIDC information.\nNeeds `features.externalUserManagement.ldap.writeable` to be be set to `true`.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled",
                "claimEmail",
                "claimDisplayname",
                "claimGroups",
                "claimUserName"
              ],
              "title": "autoprovisionAccounts",
              "type": "object"
            },
            "enabled": {
              "default": false,
              "description": "Enables external user management (and disables internal user management).\nNeeds an external OpenID Connect Identity Provider and an external LDAP server.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "ldap": {
              "additionalProperties": false,
              "description": "LDAP related settings.",
              "properties": {
                "bindDN": {
                  "default": "",
                  "description": "DN of the user to use to bind to the LDAP server.\nThe password for the user needs to be set in the secret referenced by `secretRefs.ldapSecretRef` as `reva-ldap-bind-password`.\nThe user needs to have permission to list users and groups.",
                  "required": [],
                  "title": "bindDN",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "certTrusted": {
                  "default": true,
                  "description": "Set only to false, if the certificate of your LDAP secure service is not trusted.\nIf set to false, you need to put the CA cert of the LDAP secure server into the secret referenced by \"ldapCaRef\"",
                  "required": [],
                  "title": "certTrusted",
                  "type": "boolean"
                },
                "disableUsers": {
                  "additionalProperties": false,
                  "description": "When using external user management, users can be set as disabled by either belonging to a group or using an ldap attribute.",
                  "properties": {
                    "disableMechanism": {
                      "default": "none",
                      "description": "Enables disabling users if configured as \"attribute\" or \"group\"",
                      "enum": [
                        "none",
                        "attribute",
                        "group"
                      ],
                      "required": [],
                      "title": "disableMechanism"
                    },
                    "disabledUsersGroupDN": {
                      "default": "cn=DisabledUsersGroup,ou=groups,o=libregraph-idm",
                      "description": "Group that a user can be added to and by that being marked as disabled.",
                      "required": [],
                      "title": "disabledUsersGroupDN",
                      "type": "string"
                    },
                    "userEnabledAttribute": {
                      "default": "ownCloudUserEnabled",
                      "description": "Attribute to use for disabling users.",
                      "required": [],
                      "title": "userEnabledAttribute",
                      "type": "string"
                    }
                  },
                  "required": [
                    "disableMechanism",
                    "userEnabledAttribute",
                    "disabledUsersGroupDN"
                  ],
                  "title": "disableUsers",
                  "type": "object"
                },
                "group": {
                  "additionalProperties": false,
                  "properties": {
                    "baseDN": {
                      "default": "ou=groups,dc=owncloud,dc=com",
                      "description": "Search base DN for looking up LDAP groups.",
                      "required": [],
                      "title": "baseDN",
                      "type": "string"
                    },
                    "createBaseDN": {
                      "default": "",
                      "description": "BaseDN where new groups are created and are considered as editable.\nAll existing groups with a DN outside the `features.externalUserManagement.ldap.group.createBaseDN` will be treated as read-only groups.\nDefaults to the value `features.externalUserManagement.ldap.group.baseDN`.\nOnly applicable if `features.externalUserManagement.ldap.writeable` is set to `true`",
                      "required": [],
                      "title": "createBaseDN",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "filter": {
                      "default": "",
                      "description": "LDAP filter to add to the default filters for group searches.",
                      "required": [],
                      "title": "filter",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "objectClass": {
                      "default": "groupOfNames",
                      "description": "The object class to use for groups in the default group search filter like `groupOfNames`.",
                      "required": [],
                      "title": "objectClass",
                      "type": "string"
                    },
                    "schema": {
                      "additionalProperties": false,
                      "properties": {
                        "displayName": {
                          "default": "cn",
                          "description": "LDAP Attribute to use for the displayname of groups (often the same as groupname attribute).",
                          "required": [],
                          "title": "displayName",
                          "type": "string"
                        },
                        "groupName": {
                          "default": "cn",
                          "description": "LDAP Attribute to use for the name of groups.",
                          "required": [],
                          "title": "groupName",
                          "type": "string"
                        },
                        "id": {
                          "default": "ownclouduuid",
                          "description": "LDAP Attribute to use as the unique ID for groups. This should be a stable globally unique ID like a UUID.",
                          "required": [],
                          "title": "id",
                          "type": "string"
                        },
                        "idIsOctetString": {
                          "default": false,
                          "description": "Set this to true if the defined `id` attribute for groups is of the `OCTETSTRING` syntax. This is e.g. required when using the `objectGUID` attribute of Active Directory for the group ID`s.",
                          "required": [],
                          "title": "idIsOctetString",
                          "type": "boolean"
                        },
                        "mail": {
                          "default": "mail",
                          "description": "LDAP Attribute to use for the email address of groups (can be empty).",
                          "required": [],
                          "title": "mail",
                          "type": "string"
                        },
                        "member": {
                          "default": "member",
                          "description": "LDAP Attribute that is used for group members.",
                          "required": [],
                          "title": "member",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "idIsOctetString",
                        "mail",
                        "displayName",
                        "groupName",
                        "member"
                      ],
                      "title": "schema",
                      "type": "object"
                    },
                    "scope": {
                      "default": "sub",
                      "description": "LDAP search scope to use when looking up groups. Supported values are `base`, `one` and `sub`.",
                      "required": [],
                      "title": "scope",
                      "type": "string"
                    }
                  },
                  "required": [
                    "schema",
                    "baseDN",
                    "scope",
                    "objectClass"
                  ],
                  "title": "group",
                  "type": "object"
                },
                "insecure": {
                  "default": false,
                  "description": "Disables SSL certificate checking for connections to the LDAP server.\nFor self signed certificates, consider to put the CA cert of the LDAP secure server into the secret referenced by \"ldapCaRef\"\nNot recommended for production installations.",
                  "required": [],
                  "title": "insecure",
                  "type": "boolean"
                },
                "passwordModifyExOpEnabled": {
                  "default": false,
                  "description": "Use the Password Modify Extended Operation for updating user passwords.",
                  "required": [],
                  "title": "passwordModifyExOpEnabled",
                  "type": "boolean"
                },
                "readOnlyAttributes": {
                  "description": "If the LDAP server is set to writable in general, some user attributes can be restricted to read only in the UI.\nNote: This only disables editing in the UI. The readonly permissions need to be enforced in the LDAP server itself.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "readOnlyAttributes",
                  "type": "array"
                },
                "refintEnabled": {
                  "default": false,
                  "description": "Signals that the LDAP server has the refint plugin enabled, which makes some actions not needed.",
                  "required": [],
                  "title": "refintEnabled",
                  "type": "boolean"
                },
                "uri": {
                  "default": "",
                  "description": "- user.onPremisesSamAccountName # username\n- user.displayName # display name\n- user.mail # mail\n- user.passwordProfile # password\n- user.appRoleAssignments # role\n- user.accountEnabled # login allowed\n- drive.quota # quota\nURI to connect to the LDAP secure server.",
                  "format": "uri",
                  "required": [],
                  "title": "uri",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "useServerUUID": {
                  "default": false,
                  "description": "If set to true, rely on the LDAP Server to generate a unique ID for users and groups, like when using 'entryUUID' as the user ID attribute.",
                  "required": [],
                  "title": "useServerUUID",
                  "type": "boolean"
                },
                "user": {
                  "additionalProperties": false,
                  "properties": {
                    "baseDN": {
                      "default": "ou=users,dc=owncloud,dc=com",
                      "description": "Search base DN for looking up LDAP users.",
                      "required": [],
                      "title": "baseDN",
                      "type": "string"
                    },
                    "filter": {
                      "default": "",
                      "description": "LDAP filter to add to the default filters for user search like `(objectclass=ownCloud)`.",
                      "required": [],
                      "title": "filter",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "objectClass": {
                      "default": "inetOrgPerson",
                      "description": "The object class to use for users in the default user search filter like `inetOrgPerson`.",
                      "required": [],
                      "title": "objectClass",
                      "type": "string"
                    },
                    "schema": {
                      "additionalProperties": false,
                      "properties": {
                        "displayName": {
                          "default": "displayname",
                          "description": "LDAP Attribute to use for the displayname of users.",
                          "required": [],
                          "title": "displayName",
                          "type": "string"
                        },
                        "id": {
                          "default": "ownclouduuid",
                          "description": "LDAP Attribute to use as the unique id for users. This should be a stable globally unique id like a UUID.",
                          "required": [],
                          "title": "id",
                          "type": "string"
                        },
                        "idIsOctetString": {
                          "default": false,
                          "description": "Set this to true if the defined `id` attribute for users is of the `OCTETSTRING` syntax. This is e.g. required when using the `objectGUID` attribute of Active Directory for the user ID`s.",
                          "required": [],
                          "title": "idIsOctetString",
                          "type": "boolean"
                        },
                        "mail": {
                          "default": "mail",
                          "description": "LDAP Attribute to use for the email address of users.",
                          "required": [],
                          "title": "mail",
                          "type": "string"
                        },
                        "userName": {
                          "default": "uid",
                          "description": "LDAP Attribute to use for username of users.",
                          "required": [],
                          "title": "userName",
                          "type": "string"
                        },
                        "userType": {
                          "default": "ownCloudUserType",
                          "description": "LDAP Attribute to distinguish between 'Member' and 'Guest' users. Default is 'ownCloudUserType'.",
                          "required": [],
                          "title": "userType",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "idIsOctetString",
                        "mail",
                        "displayName",
                        "userName",
                        "userType"
                      ],
                      "title": "schema",
                      "type": "object"
                    },
                    "scope": {
                      "default": "sub",
                      "description": "LDAP search scope to use when looking up users. Supported values are `base`, `one` and `sub`.",
                      "enum": [
                        "base",
                        "sub",
                        "one"
                      ],
                      "required": [],
                      "title": "scope"
                    },
                    "substringFilterType": {
                      "default": "any",
                      "description": "Type of substring search filter to use for substring searches for users. Possible values: `initial` for doing prefix only searches, `final` for doing suffix only searches or `any` for doing full substring searches",
                      "enum": [
                        "initial",
                        "final",
                        "any"
                      ],
                      "required": [],
                      "title": "substringFilterType"
                    },
                    "userNameMatch": {
                      "default": "default",
                      "description": "Apply restrictions to usernames. Supported values are 'default' and 'none'. When set to 'default', user names must not start with a number and are restricted to ASCII characters. When set to 'none', no restrictions are applied. The default value is 'default'.",
                      "required": [],
                      "title": "userNameMatch",
                      "type": "string"
                    }
                  },
                  "required": [
                    "schema",
                    "baseDN",
                    "scope",
                    "substringFilterType",
                    "objectClass",
                    "userNameMatch"
                  ],
                  "title": "user",
                  "type": "object"
                },
                "writeable": {
                  "default": true,
                  "description": "Writeable configures if oCIS is allowed to write to the LDAP server, to eg. create or edit users.",
                  "required": [],
                  "title": "writeable",
                  "type": "boolean"
                }
              },
              "required": [
                "writeable",
                "readOnlyAttributes",
                "certTrusted",
                "insecure",
                "refintEnabled",
                "passwordModifyExOpEnabled",
                "useServerUUID",
                "user",
                "group",
                "disableUsers"
              ],
              "title": "ldap",
              "type": "object"
            },
            "oidc": {
              "additionalProperties": false,
              "description": "OpenID Connect Identity provider related settings.",
              "properties": {
                "accessTokenVerifyMethod": {
                  "default": "jwt",
                  "description": "OIDC Acces Token Verify Method\nSet to \"jwt\" or \"none\"",
                  "required": [],
                  "title": "accessTokenVerifyMethod",
                  "type": "string"
                },
                "editAccountLink": {
                  "default": "",
                  "description": "Link to the OIDC provider's user accessible account editing page. This will be shown to the user on the personal account page.\nWhen using Keycloak with the a realm named \"ocis\" this could point to eg. https://keycloak.owncloud.test/realms/ocis/account/",
                  "required": [],
                  "title": "editAccountLink",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "issuerURI": {
                  "default": "",
                  "description": "Issuer URI of the OpenID Connect Identity Provider.\nIf the IDP doesn't have valid / trusted SSL certificates, certificate validation can be disabled with the `insecure.oidcIdpInsecure` option.\nThe issuerURI will be automatically be added to http.csp.directives.connectSrc",
                  "format": "uri",
                  "required": [],
                  "title": "issuerURI",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "roleAssignment": {
                  "additionalProperties": false,
                  "description": "Configure OIDC role assignment. If activated, oCIS will read the role assigment from the OIDC token, see\nxref:{s-path}/proxy.adoc#automatic-role-assignments[Automatic Role Assignments]",
                  "properties": {
                    "claim": {
                      "default": "roles",
                      "description": "The name of the OIDC claim holding the role assignment",
                      "required": [],
                      "title": "claim",
                      "type": "string"
                    },
                    "enabled": {
                      "default": false,
                      "description": "enable OIDC role assignment.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "mapping": {
                      "description": "Configure the mapping for the role assignment.\nExample configuration:\n- role_name: admin\n  claim_value: ocisAdmin\n- role_name: spaceadmin\n  claim_value: ocisSpaceAdmin\n- role_name: user\n  claim_value: ocisUser\n- role_name: user-light\n  claim_value: ocisGuest",
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "claim_value": {
                            "required": [],
                            "type": "string"
                          },
                          "role_name": {
                            "required": [],
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      "required": [],
                      "title": "mapping",
                      "type": "array"
                    }
                  },
                  "required": [
                    "enabled",
                    "claim",
                    "mapping"
                  ],
                  "title": "roleAssignment",
                  "type": "object"
                },
                "sessionManagementLink": {
                  "default": "",
                  "description": "Link to the OIDC provider's user accessible session management. This will be shown to the user on the personal account page.\nWhen using Keycloak with the a realm named \"ocis\" this could point to eg. https://keycloak.owncloud.test/realms/ocis/account/",
                  "required": [],
                  "title": "sessionManagementLink",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "skipUserInfo": {
                  "default": false,
                  "description": "Do not look up user claims at the userinfo endpoint and directly read them from the access token.\nIncompatible with 'accessTokenVerifyMethod=none'",
                  "required": [],
                  "title": "skipUserInfo",
                  "type": "boolean"
                },
                "spaceAssignment": {
                  "additionalProperties": false,
                  "description": "Configure OIDC space assignment. If activate, oCIS will read the space assignements from the oidc token",
                  "properties": {
                    "claim": {
                      "default": "",
                      "description": "The name of the OIDC claim holding the space assignment",
                      "required": [],
                      "title": "claim",
                      "type": "string"
                    },
                    "enabled": {
                      "default": false,
                      "description": "enable OIDC space assignment.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "mapping": {
                      "description": "Configure the mapping for the role assignment.\nExample configuration:\n- oidcRoleA:manager\n- oidcRoleB:editor\n- oidcRoleC:viewer",
                      "items": {
                        "required": [],
                        "type": "string"
                      },
                      "required": [],
                      "title": "mapping",
                      "type": "array"
                    },
                    "regexp": {
                      "default": "(.*)",
                      "description": "The regexp extracting the spaceid and the -role from the claim",
                      "required": [],
                      "title": "regexp",
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled",
                    "claim",
                    "regexp"
                  ],
                  "title": "spaceAssignment",
                  "type": "object"
                },
                "userIDClaim": {
                  "default": "ocis.user.uuid",
                  "description": "Claim to take an unique user identifier from. It will be used to look up the user on the LDAP server.",
                  "required": [],
                  "title": "userIDClaim",
                  "type": "string"
                },
                "userIDClaimAttributeMapping": {
                  "default": "userid",
                  "description": "Attribute mapping of for the userIDClaim.\nSet to `userid` if the claim specified in `...oidc.userIDClaim` holds the value of the ldap user attribute specified in `...ldap.user.schema.id`.\nSet to `mail` if the claim specified in `...oidc.userIDClaim` holds the value of the ldap user attribute specified in  `...ldap.user.schema.mail`.\nSet to `username` if the claim specified in `...oidc.userIDClaim` holds the value of the ldap user attribute specified in `...ldap.user.schema.userName`.",
                  "required": [],
                  "title": "userIDClaimAttributeMapping",
                  "type": "string"
                }
              },
              "required": [
                "userIDClaim",
                "userIDClaimAttributeMapping",
                "accessTokenVerifyMethod",
                "skipUserInfo",
                "roleAssignment"
              ],
              "title": "oidc",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "autoprovisionAccounts",
            "oidc",
            "ldap"
          ],
          "title": "externalUserManagement",
          "type": "object"
        },
        "gdprReport": {
          "additionalProperties": false,
          "description": "GDPR report related settings.",
          "properties": {
            "integrations": {
              "additionalProperties": false,
              "description": "Enables the GDPR report feature\nControls the separate GDPR integrations",
              "properties": {
                "keycloak": {
                  "additionalProperties": false,
                  "properties": {
                    "basePath": {
                      "default": "",
                      "description": "Base URI of keycloak.",
                      "required": [],
                      "title": "basePath",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "clientID": {
                      "default": "",
                      "description": "Client ID to authenticate against keycloak with.",
                      "required": [],
                      "title": "clientID",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "clientRealm": {
                      "default": "",
                      "description": "Realm that the client ID is configured in, usually master.",
                      "required": [],
                      "title": "clientRealm",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enable keycloak data export.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "insecure": {
                      "default": false,
                      "description": "Disables SSL certificate checking for connections to the GDPR export service.\nNot recommended for production installations.",
                      "required": [],
                      "title": "insecure",
                      "type": "boolean"
                    },
                    "userRealm": {
                      "default": "",
                      "description": "Realm that the users are in.",
                      "required": [],
                      "title": "userRealm",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "insecure"
                  ],
                  "title": "keycloak",
                  "type": "object"
                }
              },
              "required": [
                "keycloak"
              ],
              "title": "integrations",
              "type": "object"
            }
          },
          "required": [
            "integrations"
          ],
          "title": "gdprReport",
          "type": "object"
        },
        "language": {
          "additionalProperties": false,
          "description": "Language related settings",
          "properties": {
            "default": {
              "default": "en",
              "description": "The default language. If not defined, English will be used as default. See the documentation for more details.",
              "required": [],
              "title": "default",
              "type": "string"
            }
          },
          "required": [
            "default"
          ],
          "title": "language",
          "type": "object"
        },
        "ocm": {
          "additionalProperties": false,
          "description": "OCM settings",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables OCM service",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "invitationExpiry": {
              "default": "24h0m0s",
              "description": "Expiry duration for invite tokens.",
              "required": [],
              "title": "invitationExpiry",
              "type": "string"
            },
            "providersConfigRef": {
              "default": "",
              "description": "Required reference to an existing provider config.\nWill be mounted to /etc/ocis\nDoes not get autogenerated.\nDocumentation can be found at https://doc.owncloud.com/ocis/next/deployment/services/s-list/ocm.html#trust-between-instances",
              "required": [],
              "title": "providersConfigRef",
              "type": [
                "string",
                "null"
              ]
            },
            "requestTimeout": {
              "default": "30s",
              "description": "Timeout specifies a time limit for requests made to OCM endpoints.",
              "required": [],
              "title": "requestTimeout",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "invitationExpiry",
            "requestTimeout"
          ],
          "title": "ocm",
          "type": "object"
        },
        "policies": {
          "additionalProperties": false,
          "description": "Define policies",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables policies",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "engineTimeout": {
              "default": "10s",
              "description": "Sets the timeout the rego expression evaluation can take. The timeout can be set as number followed by a unit identifier\nlike ms, s, etc. Rules default to deny if the timeout was reached.",
              "required": [],
              "title": "engineTimeout",
              "type": "string"
            },
            "policies": {
              "description": "Sets the policies. Each policy file is defined by a `fileName` and a `content`. The content takes the rego script as text.\nFor further information, please have a look at https://doc.owncloud.com/ocis/next/deployment/services/s-list/policies.html\nAttention: All scripts provided here will end up in a ConfigMap. The data stored in a ConfigMap cannot exceed 1 MiB. see\nhttps://kubernetes.io/docs/concepts/configuration/configmap/#:~:text=The%20data%20stored%20in%20a,separate%20database%20or%20file%20service.",
              "items": {
                "additionalProperties": false,
                "properties": {
                  "content": {
                    "required": [],
                    "type": "string"
                  },
                  "fileName": {
                    "required": [],
                    "type": "string"
                  }
                },
                "required": [],
                "type": "object"
              },
              "required": [],
              "title": "policies",
              "type": "array"
            }
          },
          "required": [
            "enabled",
            "engineTimeout",
            "policies"
          ],
          "title": "policies",
          "type": "object"
        },
        "quotas": {
          "additionalProperties": false,
          "description": "Define quota settings.",
          "properties": {
            "default": {
              "default": "",
              "description": "Sets the default quota for spaces in bytes. So 1000 sets the default quota to 1KB. 0 means unlimited.",
              "required": [],
              "title": "default",
              "type": [
                "string",
                "null"
              ]
            },
            "max": {
              "default": "",
              "description": "Sets the maximum quota for spaces in bytes. So 1000 sets the max quota to 1KB.",
              "required": [],
              "title": "max",
              "type": [
                "string",
                "null"
              ]
            },
            "roles": {
              "additionalProperties": false,
              "description": "Sets specific quotas for roles",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "roles",
              "type": "object"
            }
          },
          "required": [
            "roles"
          ],
          "title": "quotas",
          "type": "object"
        },
        "roles": {
          "additionalProperties": false,
          "description": "Define custom roles here. Note that the definition will be either or. So you cannot provide a ConfigMap name and text at once.",
          "properties": {
            "availableUnifiedRoles": {
              "description": "Define a list of unified roles to make them available.\nThe default of an empty list means all unified roles are available.\nYou can read about unified roles in https://doc.owncloud.com/ocis/next/deployment/services/s-list/graph.html.\nThe IDs of the roles and a description can be found by running:\nkubectl -n ocis exec deployments/graph -- ocis graph list-unified-roles",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "availableUnifiedRoles",
              "type": "array"
            },
            "customRoles": {
              "default": "",
              "description": "Define the roles by providing the JSON text here.",
              "required": [],
              "title": "customRoles",
              "type": [
                "string",
                "null"
              ]
            },
            "customRolesConfigRef": {
              "default": "",
              "description": "Define the roles by specifying a name of a ConfigMap which already contains the the role description (might also be defined in the `extraResources` section).\nThe ConfigMap needs to contain a file named `custom-roles.json` which holds the role description in JSON format\nPlease note that you have to restart the settings service manually if you change the content of you ConfigMap.",
              "required": [],
              "title": "customRolesConfigRef",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "availableUnifiedRoles"
          ],
          "title": "roles",
          "type": "object"
        },
        "sharing": {
          "additionalProperties": false,
          "description": "Sharing related settings",
          "properties": {
            "autoAcceptShares": {
              "default": true,
              "description": "automatically accept incoming shares",
              "required": [],
              "title": "autoAcceptShares",
              "type": "boolean"
            },
            "passwordPolicies": {
              "additionalProperties": false,
              "description": "password policies for share passwords",
              "properties": {
                "bannedPasswords": {
                  "description": "list of banned passwords",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "bannedPasswords",
                  "type": "array"
                },
                "minCharacters": {
                  "default": 0,
                  "description": "the minimum amount of characters the password needs to have",
                  "minimum": 0,
                  "required": [],
                  "title": "minCharacters",
                  "type": "integer"
                },
                "minDigits": {
                  "default": 0,
                  "description": "the minimum amount of digits the password needs to have",
                  "minimum": 0,
                  "required": [],
                  "title": "minDigits",
                  "type": "integer"
                },
                "minLowerCharacters": {
                  "default": 0,
                  "description": "the minimum amount of lower case characters the password needs to have",
                  "minimum": 0,
                  "required": [],
                  "title": "minLowerCharacters",
                  "type": "integer"
                },
                "minSpecialCharacters": {
                  "default": 0,
                  "description": "the minimum amount of special characters the password needs to have",
                  "minimum": 0,
                  "required": [],
                  "title": "minSpecialCharacters",
                  "type": "integer"
                },
                "minUpperCharacters": {
                  "default": 0,
                  "description": "the minimum amount of upper case characters the password needs to have",
                  "minimum": 0,
                  "required": [],
                  "title": "minUpperCharacters",
                  "type": "integer"
                }
              },
              "required": [
                "minCharacters",
                "minLowerCharacters",
                "minUpperCharacters",
                "minSpecialCharacters",
                "minDigits",
                "bannedPasswords"
              ],
              "title": "passwordPolicies",
              "type": "object"
            },
            "publiclink": {
              "additionalProperties": false,
              "description": "Sharing per public link related setings",
              "properties": {
                "shareMustHavePassword": {
                  "default": false,
                  "description": "Enforce a password on all public link shares.",
                  "required": [],
                  "title": "shareMustHavePassword",
                  "type": "boolean"
                },
                "writeableShareMustHavePassword": {
                  "default": false,
                  "description": "Enforce a password only on writable public link shares.\nIs already enforced if `features.sharing.publiclink.shareMustHavePassword` option is set to `true``.",
                  "required": [],
                  "title": "writeableShareMustHavePassword",
                  "type": "boolean"
                }
              },
              "required": [
                "shareMustHavePassword",
                "writeableShareMustHavePassword"
              ],
              "title": "publiclink",
              "type": "object"
            },
            "users": {
              "additionalProperties": false,
              "description": "Sharing with users related settings",
              "properties": {
                "search": {
                  "additionalProperties": false,
                  "description": "Search settings for finding users to share with.",
                  "properties": {
                    "minLengthLimit": {
                      "default": 3,
                      "description": "Minimum number of characters to enter before a client should start a search for Share receivers.\nThis setting can be used to customize the user experience if e.g too many results are displayed.",
                      "minimum": 1,
                      "required": [],
                      "title": "minLengthLimit",
                      "type": "integer"
                    },
                    "showUserEmail": {
                      "default": false,
                      "description": "Show user email when searching for other users to share with.",
                      "required": [],
                      "title": "showUserEmail",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "minLengthLimit",
                    "showUserEmail"
                  ],
                  "title": "search",
                  "type": "object"
                }
              },
              "required": [
                "search"
              ],
              "title": "users",
              "type": "object"
            }
          },
          "required": [
            "users",
            "publiclink",
            "autoAcceptShares",
            "passwordPolicies"
          ],
          "title": "sharing",
          "type": "object"
        },
        "virusscan": {
          "additionalProperties": false,
          "description": "Define virus scanning",
          "properties": {
            "enabled": {
              "default": false,
              "description": "Enables virus scanning",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "icap": {
              "additionalProperties": false,
              "description": "Define icap parameters",
              "properties": {
                "service": {
                  "default": "",
                  "description": "Sets the service to be used in icap",
                  "required": [],
                  "title": "service",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "timeout": {
                  "default": 300,
                  "description": "Sets the timeout for icap scans",
                  "required": [],
                  "title": "timeout",
                  "type": "integer"
                },
                "url": {
                  "default": "",
                  "description": "Sets the icap url",
                  "format": "uri",
                  "required": [],
                  "title": "url",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "timeout"
              ],
              "title": "icap",
              "type": "object"
            },
            "infectedFileHandling": {
              "default": "delete",
              "description": "Define what should happen with infected files. Supported options are: 'delete', 'continue' and 'abort '.\nDelete will delete the file.\nContinue will mark the file as infected but continues further processing.\nAbort will keep the file in the uploads folder for further admin inspection and will not move it to its final destination.",
              "enum": [
                "delete",
                "continue",
                "abort"
              ],
              "required": [],
              "title": "infectedFileHandling"
            },
            "maxScanSize": {
              "default": "",
              "description": "Sets a maximum file size for scans. Only this many bytes of a file will be scanned. 0 means unlimited and is the default.\nUsable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB.",
              "required": [],
              "title": "maxScanSize",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "enabled",
            "infectedFileHandling",
            "icap"
          ],
          "title": "virusscan",
          "type": "object"
        }
      },
      "required": [
        "demoUsers",
        "language",
        "emailNotifications",
        "sharing",
        "appsIntegration",
        "externalUserManagement",
        "gdprReport",
        "roles",
        "quotas",
        "virusscan",
        "policies",
        "edition",
        "archiver",
        "ocm",
        "authapp"
      ],
      "title": "features",
      "type": "object"
    },
    "global": {
      "additionalProperties": true,
      "description": "Needs to be added to the schema, so that this chart can be used as subchart when `global` is set.\nsee https://github.com/owncloud/ocis-charts/issues/872",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "hostAliases": {
      "description": "provide custom hostnames to every oCIS pods",
      "items": {
        "additionalProperties": false,
        "properties": {
          "hostnames": {
            "items": {
              "format": "hostname",
              "required": [],
              "type": "string"
            },
            "required": [],
            "type": "array"
          },
          "ip": {
            "anyOf": [
              {
                "format": "ivp4",
                "required": [],
                "type": "string"
              },
              {
                "format": "ivp6",
                "required": [],
                "type": "string"
              }
            ],
            "required": []
          }
        },
        "required": [],
        "type": "object"
      },
      "required": [],
      "title": "hostAliases",
      "type": "array"
    },
    "http": {
      "additionalProperties": false,
      "description": "HTTP settings for oCIS services.",
      "properties": {
        "cors": {
          "additionalProperties": false,
          "description": "CORS settings for oCIS services.",
          "properties": {
            "allow_origins": {
              "description": "allow_origins is a list of origins a cross-domain request can be executed from.\nIf the special \"*\" value is present in the list, all origins will be allowed.",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "allow_origins",
              "type": "array"
            }
          },
          "required": [],
          "title": "cors",
          "type": "object"
        },
        "csp": {
          "additionalProperties": false,
          "description": "CSP settings for oCIS services.",
          "properties": {
            "directives": {
              "additionalProperties": false,
              "properties": {
                "childSrc": {
                  "description": "child-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/child-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "childSrc",
                  "type": "array"
                },
                "connectSrc": {
                  "description": "connect-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "connectSrc",
                  "type": "array"
                },
                "defaultSrc": {
                  "description": "default-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "defaultSrc",
                  "type": "array"
                },
                "fontSrc": {
                  "description": "front-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/front-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "fontSrc",
                  "type": "array"
                },
                "frameAncestors": {
                  "description": "frame-ancestors directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "frameAncestors",
                  "type": "array"
                },
                "frameSrc": {
                  "description": "frame-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "frameSrc",
                  "type": "array"
                },
                "imgSrc": {
                  "description": "img-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "imgSrc",
                  "type": "array"
                },
                "manifestSrc": {
                  "description": "manifest-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/manifest-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "manifestSrc",
                  "type": "array"
                },
                "mediaSrc": {
                  "description": "media-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/media-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "mediaSrc",
                  "type": "array"
                },
                "objectSrc": {
                  "description": "object-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/object-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "objectSrc",
                  "type": "array"
                },
                "scriptSrc": {
                  "description": "script-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "scriptSrc",
                  "type": "array"
                },
                "styleSrc": {
                  "description": "style-src directive, see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "styleSrc",
                  "type": "array"
                }
              },
              "required": [],
              "title": "directives",
              "type": "object"
            }
          },
          "required": [
            "directives"
          ],
          "title": "csp",
          "type": "object"
        }
      },
      "required": [
        "cors",
        "csp"
      ],
      "title": "http",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "description": "Image for oCIS services",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "pullSecrets": {
          "description": "Names of the secret containing the credentials to pull an image from the registry. More\ninformation how a secret can be defined at https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nThese secrets also apply to initContainers, so you need to provide secrets for the initContainer image here as well.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "pullSecrets",
          "type": "array"
        },
        "repository": {
          "default": "owncloud/ocis",
          "description": "Image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "sha": {
          "default": "",
          "description": "Image sha / digest (optional).",
          "required": [],
          "title": "sha",
          "type": [
            "string",
            "null"
          ]
        },
        "tag": {
          "default": "",
          "description": "Image tag. Defaults to the chart's appVersion.",
          "required": [],
          "title": "tag",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "repository",
        "pullPolicy"
      ],
      "title": "image",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "Ingress for oCIS.",
      "properties": {
        "annotations": {
          "additionalProperties": false,
          "description": "Ingress annotations.",
          "patternProperties": {
            ".*": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enables the Ingress.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "ingressClassName": {
          "default": "",
          "description": "Ingress class to use.\nUses the default ingress class if not set.",
          "required": [],
          "title": "ingressClassName",
          "type": [
            "string",
            "null"
          ]
        },
        "labels": {
          "additionalProperties": false,
          "description": "Labels for the ingress.",
          "patternProperties": {
            ".*": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "tls": {
          "description": "Ingress TLS configuration.",
          "items": {
            "additionalProperties": false,
            "properties": {
              "hosts": {
                "items": {
                  "required": [],
                  "type": "string"
                },
                "required": [],
                "type": "array"
              },
              "secretName": {
                "required": [],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled"
      ],
      "title": "ingress",
      "type": "object"
    },
    "initContainerImage": {
      "additionalProperties": false,
      "description": "InitContainer image used for oCIS services.\nOnly used if `services.xxx.persistence.chownInitContainer.enabled` is set to true for at least one service.",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "Image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": [
            "string",
            "null"
          ]
        },
        "repository": {
          "default": "busybox",
          "description": "Image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "sha": {
          "default": "",
          "description": "Image sha / digest (optional).",
          "required": [],
          "title": "sha",
          "type": [
            "string",
            "null"
          ]
        },
        "tag": {
          "default": "stable",
          "description": "Image tag.",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "tag",
        "pullPolicy"
      ],
      "title": "initContainerImage",
      "type": "object"
    },
    "insecure": {
      "additionalProperties": false,
      "description": "Insecure options.\nThese are useful for some limited environments like CI or on a test cluster.",
      "properties": {
        "ocisHttpApiInsecure": {
          "default": false,
          "description": "Disables SSL certificate checking for connections to the oCIS http apis.\nNot recommended for production installations.",
          "required": [],
          "title": "ocisHttpApiInsecure",
          "type": "boolean"
        },
        "ocmInsecure": {
          "default": false,
          "description": "Disables SSL certificate checking for connections to all OCM instances\nNot recommended for production installations.",
          "required": [],
          "title": "ocmInsecure",
          "type": "boolean"
        },
        "oidcIdpInsecure": {
          "default": false,
          "description": "Disables SSL certificate checking for connections to the openID connect identity provider.\nNot recommended for production installations.",
          "required": [],
          "title": "oidcIdpInsecure",
          "type": "boolean"
        }
      },
      "required": [
        "oidcIdpInsecure",
        "ocisHttpApiInsecure",
        "ocmInsecure"
      ],
      "title": "insecure",
      "type": "object"
    },
    "jobNodeSelector": {
      "additionalProperties": false,
      "description": "Default nodeSelector to apply to all jobs, except per-service job nodeSelector configuration in `services.\u003cservice-name\u003e.jobNodeSelector` is set.",
      "patternProperties": {
        ".*": {
          "required": [],
          "type": "string"
        }
      },
      "required": [],
      "title": "jobNodeSelector",
      "type": "object"
    },
    "jobPriorityClassName": {
      "default": "",
      "description": "Default priorityClassName to apply to all services, except per-service jobPriorityClassName configuration in `services.\u003cservice-name\u003e.jobPriorityClassName` is set.",
      "required": [],
      "title": "jobPriorityClassName",
      "type": [
        "string",
        "null"
      ]
    },
    "jobResources": {
      "additionalProperties": false,
      "description": "Default resources to apply to all jobs in services, except per-service resources configuration in `services.\u003cservice-name\u003e.jobResources` is set.\nBest practice is to:\n- set memory request == memory limit (compare to https://home.robusta.dev/blog/kubernetes-memory-limit)\n- set cpu request and omit cpu limit (compare to https://home.robusta.dev/blog/stop-using-cpu-limits)",
      "properties": {
        "limits": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "requests": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "title": "jobResources",
      "type": "object"
    },
    "logging": {
      "additionalProperties": false,
      "description": "Logging settings for oCIS services",
      "properties": {
        "color": {
          "default": false,
          "description": "Activates colorized log output.\nNot recommended for production installations.",
          "required": [],
          "title": "color",
          "type": "boolean"
        },
        "level": {
          "default": "info",
          "description": "Log level. Valid values: `panic`, `fatal`, `error`, `warn`, `info`, `debug`, `trace`.",
          "enum": [
            "panic",
            "fatal",
            "error",
            "warn",
            "info",
            "debug",
            "trace"
          ],
          "required": [],
          "title": "level"
        },
        "pretty": {
          "default": false,
          "description": "Activates pretty log output.\nNot recommended for production installations.",
          "required": [],
          "title": "pretty",
          "type": "boolean"
        }
      },
      "required": [
        "level",
        "pretty",
        "color"
      ],
      "title": "logging",
      "type": "object"
    },
    "messagingSystem": {
      "additionalProperties": false,
      "properties": {
        "external": {
          "additionalProperties": false,
          "properties": {
            "cluster": {
              "default": "",
              "description": "Cluster name to use with the messaging system.",
              "required": [],
              "title": "cluster",
              "type": [
                "string",
                "null"
              ]
            },
            "enabled": {
              "default": false,
              "description": "Use an external NATS messaging system instead of the internal one.\nRecommended for all production instances.\nNeeds to be used if HighAvailability is needed.\nNeeds to be used if oCIS shall be used by more than a 2-digit user count.",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "endpoint": {
              "default": "",
              "description": "Endpoint of the messaging system.",
              "required": [],
              "title": "endpoint",
              "type": [
                "string",
                "null"
              ]
            },
            "tls": {
              "additionalProperties": false,
              "properties": {
                "certTrusted": {
                  "default": true,
                  "description": "Set only to false, if the certificate of your messaging system service is not trusted.\nIf set to false, you need to put the CA cert of the messaging system server into the secret referenced by \"messagingSystemCaRef\"",
                  "required": [],
                  "title": "certTrusted",
                  "type": "boolean"
                },
                "enabled": {
                  "default": true,
                  "description": "Enables TLS encrypted communication with the messaging system.\nRecommended for production installations.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "insecure": {
                  "default": false,
                  "description": "Disables SSL certificate checking for connections to the messaging system server.\nFor self signed certificates, consider to put the CA cert of the messaging system secure server into the secret referenced by \"messagingSystemCaRef\"\nNot recommended for production installations.",
                  "required": [],
                  "title": "insecure",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled",
                "certTrusted",
                "insecure"
              ],
              "title": "tls",
              "type": "object"
            }
          },
          "required": [
            "enabled",
            "tls"
          ],
          "title": "external",
          "type": "object"
        }
      },
      "required": [
        "external"
      ],
      "title": "messagingSystem",
      "type": "object"
    },
    "monitoring": {
      "additionalProperties": false,
      "description": "Service monitoring configuration. Requires the monitoring.coreos.com/v1 CRDs to be installed.",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable service monitoring.",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "60s",
          "description": "Interval at which to scrape metrics.",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "scrapeTimeout": {
          "default": "60s",
          "description": "Scrape timeout.",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "interval",
        "scrapeTimeout"
      ],
      "title": "monitoring",
      "type": "object"
    },
    "namespaceOverride": {
      "default": "",
      "description": "Override the deployment namespace of all resources in this Helm chart.",
      "required": [],
      "title": "namespaceOverride",
      "type": [
        "string",
        "null"
      ]
    },
    "nodeSelector": {
      "additionalProperties": false,
      "description": "Default nodeSelector to apply to all services, except per-service nodeSelector configuration in `services.\u003cservice-name\u003e.nodeSelector` is set.",
      "patternProperties": {
        ".*": {
          "required": [],
          "type": "string"
        }
      },
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podDisruptionBudget": {
      "additionalProperties": false,
      "description": "Default PodDisruptionBudget to apply to all services, except per-service PodDisruptionBudget configuration in `services.\u003cservice-name\u003e.podDisruptionBudget` is set.",
      "properties": {
        "maxUnavailable": {
          "oneOf": [
            {
              "required": [],
              "type": "integer"
            },
            {
              "required": [],
              "type": "string"
            }
          ],
          "required": []
        },
        "minAvailable": {
          "oneOf": [
            {
              "required": [],
              "type": "integer"
            },
            {
              "required": [],
              "type": "string"
            }
          ],
          "required": []
        }
      },
      "required": [],
      "title": "podDisruptionBudget",
      "type": "object"
    },
    "priorityClassName": {
      "default": "",
      "description": "Default priorityClassName to apply to all services, except per-service priorityClassName configuration in `services.\u003cservice-name\u003e.priorityClassName` is set.",
      "required": [],
      "title": "priorityClassName",
      "type": [
        "string",
        "null"
      ]
    },
    "registry": {
      "additionalProperties": false,
      "properties": {
        "nodes": {
          "description": "Nodes of the service registry to use.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "nodes",
          "type": "array"
        },
        "type": {
          "default": "nats-js-kv",
          "description": "Configure the service registry type.\nCan be set to \"nats-js-kv\".\nThe address of NATS node(s) needs to be set to `cache.nodes`.",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "registry",
      "type": "object"
    },
    "replicas": {
      "default": 1,
      "description": "Number of replicas for each scalable service. Has no effect when `autoscaling.enabled` is set to `true`.",
      "minimum": 1,
      "required": [],
      "title": "replicas",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": false,
      "description": "Default resources to apply to all services, except per-service resources configuration in `services.\u003cservice-name\u003e.resources` is set.\nBest practice is to:\n- set memory request == memory limit (compare to https://home.robusta.dev/blog/kubernetes-memory-limit)\n- set cpu request and omit cpu limit (compare to https://home.robusta.dev/blog/stop-using-cpu-limits)",
      "properties": {
        "limits": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "requests": {
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "required": [],
              "type": "string"
            },
            "memory": {
              "required": [],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "secretRefs": {
      "additionalProperties": false,
      "description": "References to secrets.\nLeave these empty to have them autogenerated by the Helm chart.\nNote that secrets generated by the helm chart will be removed once the helm chart is uninstalled.\nFurthermore, if you already had secrets at the default locations, they will be NOT be overwritten,\nbut the helm chart will claim ownership of them. If this is a problem, fill in the secretRefs below\nwith the names of your existing secrets.\nTODO: Update https://doc.owncloud.com/ocis/next/deployment/container/orchestration/orchestration.html#customize-the-generic-setup[doc.owncloud.com] for how to generate them.",
      "properties": {
        "adminUserSecretRef": {
          "default": "",
          "description": "Reference to an existing admin user secret (see ref:Secrets#secrets). Not used if `features.externalUserManagement.enabled` equals `true`.",
          "required": [],
          "title": "adminUserSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "collaborationWopiSecret": {
          "default": "",
          "description": "Reference to an existing collaboration service WOPI secret (see ref:Secrets#secrets). Not used if `features.appsIntegration.enabled` equals `false`.",
          "required": [],
          "title": "collaborationWopiSecret",
          "type": [
            "string",
            "null"
          ]
        },
        "gdprExportClientSecretRef": {
          "default": "",
          "description": "Reference to an existing keycloak client secret, used for the GDPR export. Only used if features.externalUserManagement.gdprExport.enabled equals true.",
          "required": [],
          "title": "gdprExportClientSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "globalNotificationsSecretRef": {
          "default": "",
          "description": "The secret to secure the global notifications endpoint. Only system admins and users knowing that secret can call the global notifications POST/DELETE endpoints.",
          "required": [],
          "title": "globalNotificationsSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "idpSecretRef": {
          "default": "",
          "description": "Reference to an existing IDP secret (see ref:Secrets#secrets). Not used if `features.externalUserManagement.enabled` equals `true`.",
          "required": [],
          "title": "idpSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "jwtSecretRef": {
          "default": "",
          "description": "Reference to an existing JWT secret (see ref:Secrets#secrets).",
          "required": [],
          "title": "jwtSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "ldapCaRef": {
          "default": "",
          "description": "Reference to an existing LDAP certificate authority secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "ldapCaRef",
          "type": [
            "string",
            "null"
          ]
        },
        "ldapCertRef": {
          "default": "",
          "description": "Reference to an existing LDAP cert secret (see ref:Secrets#secrets). Not used if `features.externalUserManagement.enabled` equals `true`.",
          "required": [],
          "title": "ldapCertRef",
          "type": [
            "string",
            "null"
          ]
        },
        "ldapSecretRef": {
          "default": "",
          "description": "Reference to an existing LDAP bind secret (see ref:Secrets#secrets).",
          "required": [],
          "title": "ldapSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "machineAuthApiKeySecretRef": {
          "default": "",
          "description": "Reference to an existing machine auth api key secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "machineAuthApiKeySecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "messagingSystemCaRef": {
          "default": "",
          "description": "Reference to an existing messaging system certificate authority secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "messagingSystemCaRef",
          "type": [
            "string",
            "null"
          ]
        },
        "notificationsSmtpSecretRef": {
          "default": "",
          "description": "Reference to an existing SMTP email server settings secret (see ref:Secrets#secrets).\nNot used if `features.emailNotifications.enabled` equals `false`.\nNot used if `features.emailNotifications.smtp.authentication` equals `none`.",
          "required": [],
          "title": "notificationsSmtpSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "s3CredentialsSecretRef": {
          "default": "",
          "description": "Reference to an existing s3 secret (see ref:Secrets#secrets)\nIf not filled in, will attempt to use values in `.storageusers.storageBackend.s3.driverConfig.s3ng` instead.",
          "required": [],
          "title": "s3CredentialsSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "serviceAccountSecretRef": {
          "default": "",
          "description": "Reference to an existing service account secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "serviceAccountSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "storagesystemJwtSecretRef": {
          "default": "",
          "description": "Reference to an existing storage-system JWT secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "storagesystemJwtSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "storagesystemSecretRef": {
          "default": "",
          "description": "Reference to an existing storage-system secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "storagesystemSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "thumbnailsSecretRef": {
          "default": "",
          "description": "Reference to an existing thumbnails transfer secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "thumbnailsSecretRef",
          "type": [
            "string",
            "null"
          ]
        },
        "transferSecretSecretRef": {
          "default": "",
          "description": "Reference to an existing transfer secret (see ref:Secrets#secrets)",
          "required": [],
          "title": "transferSecretSecretRef",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [],
      "title": "secretRefs",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": false,
      "description": "Security context options.",
      "properties": {
        "fsGroup": {
          "default": 1000,
          "description": "File system group for all volumes.",
          "minimum": 0,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "default": "OnRootMismatch",
          "description": "File system group change policy for all volumes.\nPossible values \"Always\" and \"OnRootMismatch\".\nThis will also apply to all services' chownInitContainer.",
          "enum": [
            "Always",
            "OnRootMismatch"
          ],
          "required": [],
          "title": "fsGroupChangePolicy"
        },
        "runAsGroup": {
          "default": 1000,
          "description": "Group ID that all processes within any containers will run with.",
          "minimum": 0,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsUser": {
          "default": 1000,
          "description": "User ID that all processes within any containers will run with.",
          "minimum": 0,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        }
      },
      "required": [
        "fsGroup",
        "fsGroupChangePolicy",
        "runAsUser",
        "runAsGroup"
      ],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "Kubernetes service related settings.",
      "properties": {
        "appProtocol": {
          "additionalProperties": false,
          "properties": {
            "grpc": {
              "default": "grpc",
              "description": "appProtocol to be used for service ports that use the grpc protocol.",
              "required": [],
              "title": "grpc",
              "type": "string"
            },
            "http": {
              "default": "http",
              "description": "appProtocol to be used for service ports that use the http protocol.",
              "required": [],
              "title": "http",
              "type": "string"
            },
            "ldaps": {
              "default": "tcp",
              "description": "appProtocol to be used for service ports that use the ldaps protocol. Not used if `features.externalUserManagement.enabled` equals `true`.",
              "required": [],
              "title": "ldaps",
              "type": "string"
            },
            "nats": {
              "default": "tcp",
              "description": "appProtocol to be used for service ports that use the nats wire protocol. Not used if `messagingSystem.external.enabled` equals `true`.",
              "required": [],
              "title": "nats",
              "type": "string"
            }
          },
          "required": [
            "grpc",
            "http",
            "ldaps",
            "nats"
          ],
          "title": "appProtocol",
          "type": "object"
        }
      },
      "required": [
        "appProtocol"
      ],
      "title": "service",
      "type": "object"
    },
    "services": {
      "additionalProperties": false,
      "description": "per-service configuration.",
      "properties": {
        "activitylog": {
          "additionalProperties": false,
          "description": "ACTIVITYLOG service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.\nThe value of this key will be passed to the affinity setting of the pod as documented here:\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity\nThis example will ensure that the pods will only be scheduled on nodes with the label `topology.kubernetes.io/zone`\nset to `eu-west-1` or `eu-east-1`.\nnodeAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    nodeSelectorTerms:\n    - matchExpressions:\n      - key: topology.kubernetes.io/zone\n        operator: In\n        values:\n        - eu-east-1\n        - eu-west-1\n\nThe following example will make sure that these pods will never be scheduled on the same node.\npodAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n    - labelSelector:\n        matchExpressions:\n          - key: app\n            operator: In\n            values:\n              - activitylog\n      topologyKey: kubernetes.io/hostname\n",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "activitylog",
          "type": "object"
        },
        "antivirus": {
          "additionalProperties": false,
          "description": "ANTIVIRUS service. Not used if `features.virusscan.enabled` equals `false`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "events": {
              "additionalProperties": false,
              "properties": {
                "consumer": {
                  "additionalProperties": false,
                  "properties": {
                    "concurrency": {
                      "default": 10,
                      "description": "Number of event consumers to be started that concurrently consume events.",
                      "minimum": 1,
                      "required": [],
                      "title": "concurrency",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "concurrency"
                  ],
                  "title": "consumer",
                  "type": "object"
                }
              },
              "required": [
                "consumer"
              ],
              "title": "events",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "events",
            "image"
          ],
          "title": "antivirus",
          "type": "object"
        },
        "appregistry": {
          "additionalProperties": false,
          "description": "APP REGISTRY service. Not used if `features.appsIntegration.enabled` equals `false`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "appregistry",
          "type": "object"
        },
        "audit": {
          "additionalProperties": false,
          "description": "AUDIT service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "audit",
          "type": "object"
        },
        "authapp": {
          "additionalProperties": false,
          "description": "AUTH SERVICE service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations.\nIf not enabled, pod restarts will lead to data loss.\nAlso scaling this service to more than one replica is not possible if the pods don't share the same volume.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "1Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image",
            "persistence"
          ],
          "title": "authapp",
          "type": "object"
        },
        "authmachine": {
          "additionalProperties": false,
          "description": "AUTH MACHINE service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "authmachine",
          "type": "object"
        },
        "authservice": {
          "additionalProperties": false,
          "description": "AUTH SERVICE service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "authservice",
          "type": "object"
        },
        "clientlog": {
          "additionalProperties": false,
          "description": "CLIENTLOG service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "clientlog",
          "type": "object"
        },
        "collaboration": {
          "additionalProperties": false,
          "description": "COLLABORATION service. Not used if `features.appsIntegration.enabled` equals `false`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Do note that the value will be different for each service.\nPer-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "collaboration",
          "type": "object"
        },
        "eventhistory": {
          "additionalProperties": false,
          "description": "EVENT HISTORY service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "eventhistory",
          "type": "object"
        },
        "frontend": {
          "additionalProperties": false,
          "description": "FRONTEND service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "events": {
              "additionalProperties": false,
              "properties": {
                "consumer": {
                  "additionalProperties": false,
                  "properties": {
                    "concurrency": {
                      "default": 100,
                      "description": "Number of event consumers to be started that concurrently consume events (used for auto-accepting shares, see `features.sharing.autoAcceptShares`)",
                      "minimum": 1,
                      "required": [],
                      "title": "concurrency",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "concurrency"
                  ],
                  "title": "consumer",
                  "type": "object"
                }
              },
              "required": [
                "consumer"
              ],
              "title": "events",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "events",
            "image"
          ],
          "title": "frontend",
          "type": "object"
        },
        "gateway": {
          "additionalProperties": false,
          "description": "GATEWAY service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "gateway",
          "type": "object"
        },
        "graph": {
          "additionalProperties": false,
          "description": "GRAPH service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "graph",
          "type": "object"
        },
        "groups": {
          "additionalProperties": false,
          "description": "GROUPS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "nodeSelector",
            "image"
          ],
          "title": "groups",
          "type": "object"
        },
        "idm": {
          "additionalProperties": false,
          "description": "IDM service. Not used if `features.externalUserManagement.enabled` equals `true`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations, except `features.externalUserManagement.enabled` equals `true`.\nIf not enabled, pod restarts will lead to data loss.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "10Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "persistence",
            "image"
          ],
          "title": "idm",
          "type": "object"
        },
        "idp": {
          "additionalProperties": false,
          "description": "IDP service. Not used if `features.externalUserManagement.enabled` equals `true`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.\nPer-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "idp",
          "type": "object"
        },
        "nats": {
          "additionalProperties": false,
          "description": "NATS service. Not used if `messagingSystem.external.enabled` equals `true`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations, except `messagingSystem.external.enabled` equals `true`.\nIf not enabled, pod restarts will lead to data loss.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "10Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "persistence",
            "image"
          ],
          "title": "nats",
          "type": "object"
        },
        "notifications": {
          "additionalProperties": false,
          "description": "NOTIFICATIONS service. Not used if `features.emailNotifications.enabled` equals `true`.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "jobNodeSelector": {
              "additionalProperties": false,
              "description": "Per-service jobNodeSelector configuration. Overrides the default setting from `jobNodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "jobNodeSelector",
              "type": "object"
            },
            "jobPriorityClassName": {
              "default": "",
              "description": "Per-service jobPriorityClassName configuration. Overrides the default setting from `jobPriorityClassName` if set.",
              "required": [],
              "title": "jobPriorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "jobResources": {
              "additionalProperties": false,
              "description": "Per-service jobResources configuration. Overrides the default setting from `jobResources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "jobResources",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "notifications",
          "type": "object"
        },
        "ocdav": {
          "additionalProperties": false,
          "description": "OCDAV service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "ocdav",
          "type": "object"
        },
        "ocm": {
          "additionalProperties": false,
          "description": "OCM service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations.\nIf not enabled, pod restarts will lead to data loss.\nAlso scaling this service to more than one replica is not possible if the pods don't share the same volume.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "1Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image",
            "persistence"
          ],
          "title": "ocm",
          "type": "object"
        },
        "ocs": {
          "additionalProperties": false,
          "description": "OCS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "ocs",
          "type": "object"
        },
        "policies": {
          "additionalProperties": false,
          "description": "POLICIES service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "policies",
          "type": "object"
        },
        "postprocessing": {
          "additionalProperties": false,
          "description": "POSTPROCESSING service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "events": {
              "additionalProperties": false,
              "properties": {
                "consumer": {
                  "additionalProperties": false,
                  "properties": {
                    "concurrency": {
                      "default": 3,
                      "description": "Number of event consumers to be started that concurrently consume events",
                      "minimum": 1,
                      "required": [],
                      "title": "concurrency",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "concurrency"
                  ],
                  "title": "consumer",
                  "type": "object"
                }
              },
              "required": [
                "consumer"
              ],
              "title": "events",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "events",
            "image"
          ],
          "title": "postprocessing",
          "type": "object"
        },
        "proxy": {
          "additionalProperties": false,
          "description": "PROXY service.",
          "properties": {
            "additionalPolicies": {
              "additionalProperties": true,
              "description": "Specifies additional policies for the proxy service.\nRoutes are appended to the default routes of specified policies.\nThe policy name should always be 'ocis'.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalPolicies"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": " - name: ocis\n   routes:\n     - endpoint: /some-service/endpoint\n       service: com.owncloud.some-namespace.some-service\n       unprotected: true\n\nPer-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "proxy",
          "type": "object"
        },
        "search": {
          "additionalProperties": false,
          "description": "SEARCH service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "extractor": {
              "additionalProperties": false,
              "description": "Search Extractor settings.",
              "properties": {
                "sizeLimit": {
                  "default": "",
                  "description": "Image pull policy\nConfigures the maximum file size in bytes that is allowed for content extraction.\nFor the default value see https://doc.owncloud.com/ocis/next/deployment/services/s-list/search.html",
                  "required": [],
                  "title": "sizeLimit",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tika": {
                  "additionalProperties": false,
                  "properties": {
                    "cleanStopWords": {
                      "default": true,
                      "description": "Defines if stop words should be cleaned or not.",
                      "required": [],
                      "title": "cleanStopWords",
                      "type": "boolean"
                    },
                    "url": {
                      "default": "",
                      "description": "Set the URL to Tika. Only applicable if `services.search.extractor.type` == `tika`.",
                      "required": [],
                      "title": "url",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "cleanStopWords"
                  ],
                  "title": "tika",
                  "type": "object"
                },
                "type": {
                  "default": "basic",
                  "description": "Configures the search extractor type to be used. Possible extractors:\n- `basic`: the default search extractor.\n- `tika`: the Tika search extractor. If set to this value, additional settings in the `tika` section apply.",
                  "enum": [
                    "basic",
                    "tika"
                  ],
                  "required": [],
                  "title": "type"
                }
              },
              "required": [
                "tika"
              ],
              "title": "extractor",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations.\nIf not enabled, pod restarts will lead to data loss.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "10Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "extractor",
            "persistence",
            "image"
          ],
          "title": "search",
          "type": "object"
        },
        "settings": {
          "additionalProperties": false,
          "description": "SETTINGS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "settings",
          "type": "object"
        },
        "sharing": {
          "additionalProperties": false,
          "description": "SHARING service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "maxConcurrency": {
              "default": 20,
              "description": "Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause\nmore load on the system. Values of 0 or below will be ignored and the default value will be used.",
              "minimum": 1,
              "required": [],
              "title": "maxConcurrency",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image",
            "maxConcurrency"
          ],
          "title": "sharing",
          "type": "object"
        },
        "sse": {
          "additionalProperties": false,
          "description": "SSE service",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "connections": {
              "additionalProperties": false,
              "properties": {
                "keepaliveInterval": {
                  "default": "30s",
                  "description": "To prevent intermediate proxies from closing the SSE connection, send periodic SSE comments to keep it open.",
                  "required": [],
                  "title": "keepaliveInterval",
                  "type": "string"
                }
              },
              "required": [
                "keepaliveInterval"
              ],
              "title": "connections",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "connections",
            "image"
          ],
          "title": "sse",
          "type": "object"
        },
        "storagepubliclink": {
          "additionalProperties": false,
          "description": "STORAGE-PUBLICLINK service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "storagepubliclink",
          "type": "object"
        },
        "storageshares": {
          "additionalProperties": false,
          "description": "STORAGE-SHARES service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "storageshares",
          "type": "object"
        },
        "storagesystem": {
          "additionalProperties": false,
          "description": "STORAGE-SYSTEM service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes. Needs to be `[ReadWriteMany]` when having more than one replica for this service.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations.\nIf not enabled, pod restarts will lead to data loss.\nAlso scaling this service to more than one replica is not possible if the pods don't share the same volume.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "5Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "persistence",
            "image"
          ],
          "title": "storagesystem",
          "type": "object"
        },
        "storageusers": {
          "additionalProperties": false,
          "description": "STORAGE-USERS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "events": {
              "additionalProperties": false,
              "properties": {
                "consumer": {
                  "additionalProperties": false,
                  "properties": {
                    "concurrency": {
                      "default": 10,
                      "description": "Number of event consumers to be started that concurrently consume events (eg. postprocessing related events)",
                      "minimum": 1,
                      "required": [],
                      "title": "concurrency",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "concurrency"
                  ],
                  "title": "consumer",
                  "type": "object"
                }
              },
              "required": [
                "consumer"
              ],
              "title": "events",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "jobNodeSelector": {
              "additionalProperties": false,
              "description": "Per-service jobNodeSelector configuration. Overrides the default setting from `jobNodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "jobNodeSelector",
              "type": "object"
            },
            "jobPriorityClassName": {
              "default": "",
              "description": "Per-service jobPriorityClassName configuration. Overrides the default setting from `jobPriorityClassName` if set.",
              "required": [],
              "title": "jobPriorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "jobResources": {
              "additionalProperties": false,
              "description": "Per-service jobResources configuration. Overrides the default setting from `jobResources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "jobResources",
              "type": "object"
            },
            "maintenance": {
              "additionalProperties": false,
              "properties": {
                "cleanUpExpiredUploads": {
                  "additionalProperties": false,
                  "description": "Expired uploads can be cleaned up automatically by enabling the clean up job.",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that cleans up expired uploads. Requires persistence to be enabled and RWX storage.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "schedule": {
                      "default": "0 * * * *",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "uploadExpiration": {
                      "default": 86400,
                      "description": "Duration in seconds after which uploads will expire.\n   WARNING: Setting this to a low number will lead to uploads being cancelled before they are finished and returning a 403 to the user.",
                      "minimum": 1,
                      "required": [],
                      "title": "uploadExpiration",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds",
                    "uploadExpiration"
                  ],
                  "title": "cleanUpExpiredUploads",
                  "type": "object"
                },
                "image": {
                  "additionalProperties": false,
                  "description": "Image for the storageusers service maintenance jobs\nDefaults to the same values as `image`",
                  "properties": {
                    "pullPolicy": {
                      "default": "",
                      "description": "Image pull policy",
                      "required": [],
                      "title": "pullPolicy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "repository": {
                      "default": "",
                      "description": "Image repository",
                      "required": [],
                      "title": "repository",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sha": {
                      "default": "",
                      "description": "Image sha / digest (optional).",
                      "required": [],
                      "title": "sha",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "tag": {
                      "default": "",
                      "description": "Image tag.",
                      "required": [],
                      "title": "tag",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [],
                  "title": "image",
                  "type": "object"
                },
                "purgeExpiredTrashBinItems": {
                  "additionalProperties": false,
                  "description": "Expired trash bin items can be cleaned up automatically by enabling the purge exired trash bin items job.",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that purges expired trash bin items. Requires persistence to be enabled.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "personalDeleteBefore": {
                      "default": "720h",
                      "description": "Setting that makes the command delete all trashed personal files older than the value. The value is a number and a unit \"h\", \"m\", \"s\", \"ms\".",
                      "pattern": "^[0-9]*([hms]|ms)$",
                      "required": [],
                      "title": "personalDeleteBefore",
                      "type": "string"
                    },
                    "projectDeleteBefore": {
                      "default": "720h",
                      "description": "Setting that makes the command delete all trashed project files older than the value. The value is a number and a unit \"h\", \"m\", \"s\", \"ms\".",
                      "pattern": "^[0-9]*([hms]|ms)$",
                      "required": [],
                      "title": "projectDeleteBefore",
                      "type": "string"
                    },
                    "schedule": {
                      "default": "0 * * * *",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds",
                    "personalDeleteBefore",
                    "projectDeleteBefore"
                  ],
                  "title": "purgeExpiredTrashBinItems",
                  "type": "object"
                },
                "restartPostprocessing": {
                  "additionalProperties": false,
                  "description": "Uploads that were not postprocessed can be automatically processed again by enabling the restart job.",
                  "properties": {
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that restarts postprocessing for uploads that are currently in postprocessing state. Requires persistence to be enabled.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "schedule": {
                      "default": "0 * * * *",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds"
                  ],
                  "title": "restartPostprocessing",
                  "type": "object"
                }
              },
              "required": [
                "cleanUpExpiredUploads",
                "purgeExpiredTrashBinItems",
                "restartPostprocessing",
                "image"
              ],
              "title": "maintenance",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes. Needs to be `[ReadWriteMany]` when having more than one replica for this service.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nNeeds to be enabled on production installations.\nIf not enabled, pod restarts will lead to data loss.\nAlso scaling this service to more than one replica is not possible if the pods don't share the same volume.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "50Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            },
            "storageBackend": {
              "additionalProperties": false,
              "properties": {
                "driver": {
                  "default": "ocis",
                  "description": "Configures the storage driver. Possible values are \"ocis\" and \"s3ng\".\nThe oCIS driver stores all data in the persistent volume if persistence is enabled.\nThe S3NG driver stores all metadata in the persistent volume and uploads blobs to s3 if persistence is enabled.",
                  "enum": [
                    "ocis",
                    "s3ng"
                  ],
                  "required": [],
                  "title": "driver"
                },
                "driverConfig": {
                  "additionalProperties": false,
                  "properties": {
                    "ocis": {
                      "additionalProperties": false,
                      "properties": {
                        "maxConcurrency": {
                          "default": 100,
                          "description": "Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system.",
                          "minimum": 1,
                          "required": [],
                          "title": "maxConcurrency",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "maxConcurrency"
                      ],
                      "title": "ocis",
                      "type": "object"
                    },
                    "s3ng": {
                      "additionalProperties": false,
                      "properties": {
                        "bucket": {
                          "default": "",
                          "description": "S3 bucket to use for the S3NG driver. Only used if driver is set to \"s3ng\".",
                          "required": [],
                          "title": "bucket",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "disableContentSHA256": {
                          "default": false,
                          "description": "Disable sending content sha256 when copying objects to S3.",
                          "required": [],
                          "title": "disableContentSHA256",
                          "type": "boolean"
                        },
                        "endpoint": {
                          "default": "",
                          "description": "The S3NG driver needs an existing S3 bucket with following permissions:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"ListBucket\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::bucket-name\"\n            ]\n        },\n        {\n            \"Sid\": \"ActionsInBucketContext\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:*Object\",\n                \"s3:*MultipartUpload\",\n                \"s3:ListMultipartUploadParts\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::bucket-name/*\"\n            ]\n        }\n    ]\n}\nS3 endpoint to use for the S3NG driver. Only used if driver is set to \"s3ng\".",
                          "required": [],
                          "title": "endpoint",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "maxConcurrency": {
                          "default": 100,
                          "description": "Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause more load on the system.",
                          "minimum": 1,
                          "required": [],
                          "title": "maxConcurrency",
                          "type": "integer"
                        },
                        "putObject": {
                          "additionalProperties": false,
                          "properties": {
                            "concurrentStreamParts": {
                              "default": true,
                              "description": "Always precreate parts when copying objects to S3.",
                              "required": [],
                              "title": "concurrentStreamParts",
                              "type": "boolean"
                            },
                            "disableMultipart": {
                              "default": false,
                              "description": "Disable multipart uploads when copying objects to S3",
                              "required": [],
                              "title": "disableMultipart",
                              "type": "boolean"
                            },
                            "numThreads": {
                              "default": 4,
                              "description": "Number of concurrent uploads to use when copying objects to S3.",
                              "minimum": 1,
                              "required": [],
                              "title": "numThreads",
                              "type": "integer"
                            },
                            "partSize": {
                              "default": 0,
                              "description": "Part size for concurrent uploads to S3.",
                              "minimum": 0,
                              "required": [],
                              "title": "partSize",
                              "type": "integer"
                            },
                            "sendContentMD5": {
                              "default": true,
                              "description": "Send a Content-MD5 header when copying objects to S3.",
                              "required": [],
                              "title": "sendContentMD5",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "disableMultipart",
                            "sendContentMD5",
                            "concurrentStreamParts",
                            "numThreads",
                            "partSize"
                          ],
                          "title": "putObject",
                          "type": "object"
                        },
                        "region": {
                          "default": "default",
                          "description": "S3 region to use for the S3NG driver. Only used if driver is set to \"s3ng\".",
                          "required": [],
                          "title": "region",
                          "type": "string"
                        }
                      },
                      "required": [
                        "maxConcurrency",
                        "region",
                        "disableContentSHA256",
                        "putObject"
                      ],
                      "title": "s3ng",
                      "type": "object"
                    }
                  },
                  "required": [
                    "ocis",
                    "s3ng"
                  ],
                  "title": "driverConfig",
                  "type": "object"
                }
              },
              "required": [
                "driver",
                "driverConfig"
              ],
              "title": "storageBackend",
              "type": "object"
            }
          },
          "required": [
            "events",
            "storageBackend",
            "maintenance",
            "persistence",
            "image"
          ],
          "title": "storageusers",
          "type": "object"
        },
        "thumbnails": {
          "additionalProperties": false,
          "description": "THUMBNAILS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "jobNodeSelector": {
              "additionalProperties": false,
              "description": "Per-service jobNodeSelector configuration. Overrides the default setting from `jobNodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "jobNodeSelector",
              "type": "object"
            },
            "jobPriorityClassName": {
              "default": "",
              "description": "Per-service jobPriorityClassName configuration. Overrides the default setting from `jobPriorityClassName` if set.",
              "required": [],
              "title": "jobPriorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "jobResources": {
              "additionalProperties": false,
              "description": "Per-service jobResources configuration. Overrides the default setting from `jobResources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "jobResources",
              "type": "object"
            },
            "maintenance": {
              "additionalProperties": false,
              "description": "Maintenance configuration for cleanup jobs.",
              "properties": {
                "cleanUpOldThumbnails": {
                  "additionalProperties": false,
                  "properties": {
                    "deleteBefore": {
                      "default": 30,
                      "description": "Setting that makes the command delete all thumbnails older than the value. The value is a number in days.",
                      "minimum": 1,
                      "required": [],
                      "title": "deleteBefore",
                      "type": "integer"
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enables a job, that cleans up old thumbnails. Requires persistence to be enabled.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "method": {
                      "default": "atime",
                      "description": "Method to use with BusyBox \"find\" for finding old thumbnails. Can be mtime, atime or ctime.",
                      "enum": [
                        "mtime",
                        "atime",
                        "ctime"
                      ],
                      "required": [],
                      "title": "method"
                    },
                    "schedule": {
                      "default": "0 * * * *",
                      "description": "Cron pattern for the job to be run.",
                      "required": [],
                      "title": "schedule",
                      "type": "string"
                    },
                    "startingDeadlineSeconds": {
                      "default": 600,
                      "description": "Defines the a deadline (in whole seconds) for starting the Job, if that Job misses its scheduled time for any reason.",
                      "minimum": 1,
                      "required": [],
                      "title": "startingDeadlineSeconds",
                      "type": "integer"
                    },
                    "timezone": {
                      "default": "",
                      "description": "Timezone to be applied to the cron pattern.",
                      "required": [],
                      "title": "timezone",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "schedule",
                    "startingDeadlineSeconds",
                    "deleteBefore",
                    "method"
                  ],
                  "title": "cleanUpOldThumbnails",
                  "type": "object"
                },
                "image": {
                  "additionalProperties": false,
                  "description": "Image for thumbnails service maintenance jobs",
                  "properties": {
                    "pullPolicy": {
                      "default": "IfNotPresent",
                      "description": "Image pull policy",
                      "required": [],
                      "title": "pullPolicy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "repository": {
                      "default": "busybox",
                      "description": "Image repository",
                      "required": [],
                      "title": "repository",
                      "type": "string"
                    },
                    "sha": {
                      "default": "",
                      "description": "Image sha / digest (optional).",
                      "required": [],
                      "title": "sha",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "tag": {
                      "default": "stable",
                      "description": "Image tag.",
                      "required": [],
                      "title": "tag",
                      "type": "string"
                    }
                  },
                  "required": [
                    "repository",
                    "tag",
                    "pullPolicy"
                  ],
                  "title": "image",
                  "type": "object"
                }
              },
              "required": [
                "cleanUpOldThumbnails",
                "image"
              ],
              "title": "maintenance",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes. Needs to be `[ReadWriteMany]` when having more than one replica for this service or persistence needs to be disabled.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nIs recommended to be enabled on production installations.\nIf enabled, generated thumbnails are cached on this volume and available across pod restarts and service instances.\nIf not enabled, thumbnail generation might lead to higher CPU usage.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "10Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "quota": {
              "additionalProperties": false,
              "properties": {
                "maxConcurrencyRequests": {
                  "default": 0,
                  "description": "Number of maximum concurrent thumbnail requests. Default is 0 which is unlimited.",
                  "minimum": 0,
                  "required": [],
                  "title": "maxConcurrencyRequests",
                  "type": "integer"
                },
                "maxFileSize": {
                  "default": "50MB",
                  "description": "Sets a maximum file size of an input image which is being processed. Usable common abbreviations: [KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB, EB, EiB], example: 2GB.",
                  "required": [],
                  "title": "maxFileSize",
                  "type": "string"
                },
                "maxInputHeight": {
                  "default": 7680,
                  "description": "Sets a maximium height of an imput image which is being processed.",
                  "minimum": 1,
                  "required": [],
                  "title": "maxInputHeight",
                  "type": "integer"
                },
                "maxInputWidth": {
                  "default": 7680,
                  "description": "Sets a maximium width of an imput image which is being processed.",
                  "minimum": 1,
                  "required": [],
                  "title": "maxInputWidth",
                  "type": "integer"
                }
              },
              "required": [
                "maxConcurrencyRequests",
                "maxFileSize",
                "maxInputWidth",
                "maxInputHeight"
              ],
              "title": "quota",
              "type": "object"
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "quota",
            "persistence",
            "maintenance",
            "image"
          ],
          "title": "thumbnails",
          "type": "object"
        },
        "userlog": {
          "additionalProperties": false,
          "description": "USERLOG service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "maxConcurrency": {
              "default": 1,
              "description": "Maximum number of concurrent go-routines. Higher values can potentially get work done faster but will also cause\nmore load on the system. Values of 0 or below will be ignored and the default value will be used.",
              "minimum": 1,
              "required": [],
              "title": "maxConcurrency",
              "type": "integer"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image",
            "maxConcurrency"
          ],
          "title": "userlog",
          "type": "object"
        },
        "users": {
          "additionalProperties": false,
          "description": "USERS service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "users",
          "type": "object"
        },
        "web": {
          "additionalProperties": false,
          "description": "ownCloud WEB service.",
          "properties": {
            "additionalInitContainers": {
              "additionalProperties": true,
              "description": "Additional init containers for the Web pods.",
              "items": {
                "required": []
              },
              "required": [],
              "title": "additionalInitContainers"
            },
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "config": {
              "additionalProperties": false,
              "description": "Configuration for web, that ends up in the config.json file.",
              "properties": {
                "apps": {
                  "additionalProperties": true,
                  "description": "- url: https://ocis.kube.owncloud.test/custom_translations.json\nConfigure the {\"apps\": []} section in the Web config.json.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "apps"
                },
                "concurrency": {
                  "additionalProperties": false,
                  "properties": {
                    "resourceBatchActionRequests": {
                      "default": "",
                      "description": "Defines the maximum number of concurrent requests per file/folder/space batch action. If uset, the default of ownCloud Web will be used.",
                      "minimum": 1,
                      "required": [],
                      "title": "resourceBatchActionRequests",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "shareCreateRequests": {
                      "default": "",
                      "description": "Defines the maximum number of concurrent requests per sharing invite batch. If uset, the default of ownCloud Web will be used.",
                      "minimum": 1,
                      "required": [],
                      "title": "shareCreateRequests",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "shareListRequests": {
                      "default": "",
                      "description": "Defines the maximum number of concurrent requests when loading individual share information inside listings. If uset, the default of ownCloud Web will be used.",
                      "minimum": 1,
                      "required": [],
                      "title": "shareListRequests",
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "sseRequests": {
                      "default": "",
                      "description": "Defines the maximum number of concurrent requests in SSE event handlers. If uset, the default of ownCloud Web will be used.",
                      "minimum": 1,
                      "required": [],
                      "title": "sseRequests",
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  },
                  "required": [],
                  "title": "concurrency",
                  "type": "object"
                },
                "contextHelpersReadMore": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Specifies whether the “Read more” link should be displayed or not.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "contextHelpersReadMore",
                  "type": "object"
                },
                "customTranslations": {
                  "additionalProperties": true,
                  "description": "- src: /theme/foo.js\n  async: true\nConfigure custom translations",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "customTranslations"
                },
                "embed": {
                  "additionalProperties": false,
                  "description": "Embed mode settings",
                  "properties": {
                    "delegateAuthentication": {
                      "default": false,
                      "description": "Specifies if web delegates the authentication to the embedding parent application.",
                      "required": [],
                      "title": "delegateAuthentication",
                      "type": "boolean"
                    },
                    "delegateAuthenticationOrigin": {
                      "default": "",
                      "description": "Specifies the allowed message origin host when posting access tokens from the embedding parent application to web. Defaults to not being set, which is only recommended for development environments.",
                      "required": [],
                      "title": "delegateAuthenticationOrigin",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enables the ownCloud Web \"embed\"-mode.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "messagesOrigin": {
                      "default": "",
                      "description": "Specifies a URL under which web can be integrated via iFrame. This needs to be specified when web is running in \"embed\"-mode.",
                      "required": [],
                      "title": "messagesOrigin",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "target": {
                      "default": "",
                      "description": "Specifies how web is being integrated when running in \"embed\"-mode. Currently supported values are \"location\" and  (default).",
                      "required": [],
                      "title": "target",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled",
                    "delegateAuthentication"
                  ],
                  "title": "embed",
                  "type": "object"
                },
                "externalApps": {
                  "additionalProperties": true,
                  "description": "Configure external apps in Web's app.yaml",
                  "required": [],
                  "title": "externalApps"
                },
                "feedbackLink": {
                  "additionalProperties": false,
                  "properties": {
                    "ariaLabel": {
                      "default": "",
                      "description": "Screen reader accessible label for the feedback link. Uses the ownCloud default label if empty.",
                      "required": [],
                      "title": "ariaLabel",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": {
                      "default": "",
                      "description": "Description to be shown for the feedback link. Uses the ownCloud default description if empty.",
                      "required": [],
                      "title": "description",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "enabled": {
                      "default": false,
                      "description": "Enables the feedback link in the Web UI.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    },
                    "href": {
                      "default": "",
                      "description": "URI where the feedback link points. Uses the ownCloud default href if empty.",
                      "format": "uri",
                      "required": [],
                      "title": "href",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "feedbackLink",
                  "type": "object"
                },
                "oidc": {
                  "additionalProperties": false,
                  "properties": {
                    "loginURL": {
                      "default": "",
                      "description": "Specifies the target url valid for the logged out / access denied page.",
                      "format": "uri",
                      "required": [],
                      "title": "loginURL",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "postLogoutRedirectURI": {
                      "default": "",
                      "description": "URI where to redirect the user after a logout was performed. Defaults to the URI of the login page.",
                      "format": "uri",
                      "required": [],
                      "title": "postLogoutRedirectURI",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "webClientID": {
                      "default": "web",
                      "description": "Specify the client ID which the web frontend will use",
                      "required": [],
                      "title": "webClientID",
                      "type": "string"
                    },
                    "webClientScope": {
                      "default": "openid profile email",
                      "description": "OIDC scopes to request during authentication to authorize access to user details. Defaults to ‘openid profile email’. Values are separated by blank. More example values but not limited to are ‘address’ or ‘phone’ etc.",
                      "required": [],
                      "title": "webClientScope",
                      "type": "string"
                    }
                  },
                  "required": [
                    "webClientScope",
                    "webClientID"
                  ],
                  "title": "oidc",
                  "type": "object"
                },
                "scripts": {
                  "additionalProperties": true,
                  "description": "- href: /theme/foo.css\nConfigure the {\"scripts\": []} section in the Web config.json.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "scripts"
                },
                "styles": {
                  "additionalProperties": true,
                  "description": "Configure the {\"styles\": []} section in the Web config.json.",
                  "items": {
                    "required": []
                  },
                  "required": [],
                  "title": "styles"
                },
                "theme": {
                  "additionalProperties": false,
                  "description": "Theme settings",
                  "properties": {
                    "path": {
                      "default": "/themes/owncloud/theme.json",
                      "description": "URL path to load themes from. The theme server will be prepended. Defaults to the ownCloud Web default theme.",
                      "required": [],
                      "title": "path",
                      "type": "string"
                    },
                    "server": {
                      "default": "",
                      "description": "URL to load themes from. Will be prepended to the theme path. Defaults to the value of \"externalDomain\".",
                      "required": [],
                      "title": "server",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "themeNameConfigRefs": {
                      "default": "owncloud",
                      "description": "Name of the theme you provide via `configRefs.webThemeConfigRef` and `configRefs.webThemeAssetsConfigRef`.\nIf you change this when providing a custom theme, you must also change `theme.path`.",
                      "required": [],
                      "title": "themeNameConfigRefs",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path",
                    "themeNameConfigRefs"
                  ],
                  "title": "theme",
                  "type": "object"
                },
                "tokenStorageLocal": {
                  "additionalProperties": false,
                  "properties": {
                    "enabled": {
                      "default": true,
                      "description": "Specifies whether the access token will be stored in the local storage when set to ’true’ or in the session storage when set to ‘false’.\nIf stored in the local storage, login state will be persisted across multiple browser tabs, means no additional logins are required.",
                      "required": [],
                      "title": "enabled",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "enabled"
                  ],
                  "title": "tokenStorageLocal",
                  "type": "object"
                },
                "userListRequiresFilter": {
                  "default": false,
                  "description": "Defines whether one ore more filters must be set in order to list users in the Web admin settings.",
                  "required": [],
                  "title": "userListRequiresFilter",
                  "type": "boolean"
                }
              },
              "required": [
                "tokenStorageLocal",
                "contextHelpersReadMore",
                "feedbackLink",
                "theme",
                "oidc",
                "userListRequiresFilter",
                "embed",
                "concurrency"
              ],
              "title": "config",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "persistence": {
              "additionalProperties": false,
              "description": "Persistence settings.",
              "properties": {
                "accessModes": {
                  "description": "Persistent volume access modes. Needs to be `[ReadWriteMany]` when having more than one replica for this service or persistence needs to be disabled.",
                  "items": {
                    "enum": [
                      "ReadWriteOnce",
                      "ReadOnlyMany",
                      "ReadWriteMany",
                      "ReadWriteOncePod"
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "additionalProperties": false,
                  "description": "Persistent volume annotations.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "chownInitContainer": {
                  "default": false,
                  "description": "Enables an initContainer to chown the volume.\nThe initContainer is run as root.\nThis is not needed if the driver applies the fsGroup from the securityContext.\nThe image specified in `initContainerImage` will be used for this container.",
                  "required": [],
                  "title": "chownInitContainer",
                  "type": "boolean"
                },
                "claimName": {
                  "default": "",
                  "description": "Use a custom name for the PVC instead of the default one.",
                  "required": [],
                  "title": "claimName",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enabled": {
                  "default": false,
                  "description": "Enables persistence.\nOnly needed if you want to change the oCIS instance logo via the Web UI.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "Use an existing PersistentVolumeClaim for persistence.",
                  "required": [],
                  "title": "existingClaim",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "finalizers": {
                  "description": "Persistent volume finalizers.",
                  "items": {
                    "required": [],
                    "type": "string"
                  },
                  "required": [],
                  "title": "finalizers",
                  "type": "array"
                },
                "selectorLabels": {
                  "additionalProperties": false,
                  "description": "Persistent volume selector labels.",
                  "patternProperties": {
                    ".*": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "selectorLabels",
                  "type": "object"
                },
                "size": {
                  "default": "1Gi",
                  "description": "Size of the persistent volume.",
                  "required": [],
                  "title": "size",
                  "type": "string"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Storage class to use.\nUses the default storage class if not set.",
                  "required": [],
                  "title": "storageClassName",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "enabled",
                "chownInitContainer",
                "size"
              ],
              "title": "persistence",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "config",
            "persistence",
            "image"
          ],
          "title": "web",
          "type": "object"
        },
        "webdav": {
          "additionalProperties": false,
          "description": "WEBDAV service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "webdav",
          "type": "object"
        },
        "webfinger": {
          "additionalProperties": false,
          "description": "WEBFINGER service.",
          "properties": {
            "affinity": {
              "additionalProperties": true,
              "description": "Per-service affinity.",
              "required": [],
              "title": "affinity",
              "type": "object"
            },
            "autoscaling": {
              "additionalProperties": true,
              "description": "Per-service autoscaling. Overrides the default setting from `autoscaling` if set.",
              "properties": {
                "enabled": {
                  "required": [],
                  "type": "boolean"
                },
                "maxReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                },
                "metrics": {
                  "additionalProperties": true,
                  "required": []
                },
                "minReplicas": {
                  "minimum": 1,
                  "required": [],
                  "type": "integer"
                }
              },
              "required": [],
              "title": "autoscaling",
              "type": "object"
            },
            "extraLabels": {
              "additionalProperties": false,
              "description": "Per-service custom labels",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "extraLabels",
              "type": "object"
            },
            "image": {
              "additionalProperties": false,
              "description": "Per-service image configuration. Overrides the default setting from `image` if set.",
              "properties": {
                "pullPolicy": {
                  "default": "",
                  "description": "Image pull policy",
                  "required": [],
                  "title": "pullPolicy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "repository": {
                  "default": "",
                  "description": "Image repository",
                  "required": [],
                  "title": "repository",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sha": {
                  "default": "",
                  "description": "Image sha / digest (optional).",
                  "required": [],
                  "title": "sha",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tag": {
                  "default": "",
                  "description": "Image tag.",
                  "required": [],
                  "title": "tag",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [],
              "title": "image",
              "type": "object"
            },
            "nodeSelector": {
              "additionalProperties": false,
              "description": "Per-service nodeSelector configuration. Overrides the default setting from `nodeSelector` if set.",
              "patternProperties": {
                ".*": {
                  "required": [],
                  "type": "string"
                }
              },
              "required": [],
              "title": "nodeSelector",
              "type": "object"
            },
            "podDisruptionBudget": {
              "additionalProperties": false,
              "description": "Per-service PodDisruptionBudget. Overrides the default setting from `podDisruptionBudget` if set.",
              "properties": {
                "maxUnavailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                },
                "minAvailable": {
                  "oneOf": [
                    {
                      "required": [],
                      "type": "integer"
                    },
                    {
                      "required": [],
                      "type": "string"
                    }
                  ],
                  "required": []
                }
              },
              "required": [],
              "title": "podDisruptionBudget",
              "type": "object"
            },
            "priorityClassName": {
              "default": "",
              "description": "Per-service priorityClassName configuration. Overrides the default setting from `priorityClassName` if set.",
              "required": [],
              "title": "priorityClassName",
              "type": [
                "string",
                "null"
              ]
            },
            "resources": {
              "additionalProperties": false,
              "description": "Per-service resources configuration. Overrides the default setting from `resources` if set.",
              "properties": {
                "limits": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "requests": {
                  "additionalProperties": false,
                  "properties": {
                    "cpu": {
                      "required": [],
                      "type": "string"
                    },
                    "memory": {
                      "required": [],
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                }
              },
              "required": [],
              "title": "resources",
              "type": "object"
            }
          },
          "required": [
            "image"
          ],
          "title": "webfinger",
          "type": "object"
        }
      },
      "required": [
        "activitylog",
        "collaboration",
        "appregistry",
        "audit",
        "authmachine",
        "authservice",
        "authapp",
        "antivirus",
        "clientlog",
        "eventhistory",
        "frontend",
        "gateway",
        "graph",
        "groups",
        "idm",
        "idp",
        "nats",
        "notifications",
        "ocdav",
        "ocm",
        "ocs",
        "policies",
        "postprocessing",
        "proxy",
        "search",
        "settings",
        "sharing",
        "sse",
        "storagepubliclink",
        "storageshares",
        "storagesystem",
        "storageusers",
        "thumbnails",
        "userlog",
        "users",
        "web",
        "webdav",
        "webfinger"
      ],
      "title": "services",
      "type": "object"
    },
    "store": {
      "additionalProperties": false,
      "properties": {
        "nodes": {
          "description": "Nodes of the store to use.",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "nodes",
          "type": "array"
        },
        "type": {
          "default": "nats-js-kv",
          "description": "Configure the store type.\nCan be set to \"nats-js-kv\" or \"redis-sentinel\". There is also the non-recommended option \"memory\".\nThe address of NATS / Redis Sentinel node(s) needs to be set to `cache.nodes`.",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "store",
      "type": "object"
    },
    "topologySpreadConstraints": {
      "default": "",
      "description": "TopologySpreadConstraints controls how Pods of a service are spread across the cluster among failure-domains.\nDefaults to allow skew no more then 1 node per node.\nPassed through tpl and therefore needs to be configured as string.",
      "required": [],
      "title": "topologySpreadConstraints",
      "type": [
        "string",
        "null"
      ]
    },
    "tracing": {
      "additionalProperties": false,
      "description": "Tracing settings for oCIS services",
      "properties": {
        "collector": {
          "default": "",
          "description": "The HTTP endpoint for sending spans directly to a collector, i.e. http://jaeger-collector.observability.svc.cluster.local:14268/api/traces. Only used if the tracing endpoint is unset.",
          "required": [],
          "title": "collector",
          "type": [
            "string",
            "null"
          ]
        },
        "enabled": {
          "default": false,
          "description": "Tracing enables sending traces",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "endpoint": {
          "default": "",
          "description": "Endpoint of the tracing system, jaeger-agent.observability.svc.cluster.local:6831 or similar.",
          "required": [],
          "title": "endpoint",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {
          "default": "jaeger",
          "description": "Type of trace provider to use",
          "enum": [
            "jaeger"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "enabled",
        "type"
      ],
      "title": "tracing",
      "type": "object"
    }
  },
  "required": [
    "image",
    "initContainerImage",
    "logging",
    "tracing",
    "http",
    "debug",
    "deploymentStrategy",
    "externalDomain",
    "insecure",
    "cache",
    "store",
    "registry",
    "messagingSystem",
    "hostAliases",
    "features",
    "ingress",
    "configRefs",
    "secretRefs",
    "customCAChain",
    "securityContext",
    "backup",
    "replicas",
    "extraResources",
    "services",
    "monitoring",
    "service"
  ],
  "type": "object"
}
